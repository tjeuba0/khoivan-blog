---
export interface Props {
  post: {
    id: string
    data: {
      title: string
      description: string
      pubDate: Date
      category: string
      tags: string[]
    }
  }
}

const { post } = Astro.props
const url = `/blog/${post.id}`

// Format date for display
const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
})
---

<article class="mb-12">
  <h2 class="mb-2">
    <a href={url} class="text-gray-900 dark:text-gray-100 text-2xl font-semibold leading-tight inline-block
                         hover:text-[#0969da] dark:hover:text-[#4692e0]
                         transition-colors duration-200">
      {post.data.title}
    </a>
  </h2>
  
  <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mb-3">
    <time datetime={post.data.pubDate.toISOString()}>
      {formattedDate}
    </time>
    {post.data.tags && post.data.tags.length > 0 && (
      <div class="flex gap-2">
        {post.data.tags.slice(0, 3).map((tag) => (
          <span class="inline-block px-2 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded text-xs">
            {tag}
          </span>
        ))}
      </div>
    )}
  </div>
  
  <p class="text-gray-700 dark:text-gray-300 leading-relaxed">
    {post.data.description}
  </p>
</article>