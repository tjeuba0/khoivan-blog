---
import { getCollection } from 'astro:content'

// Get all posts and extract tags with counts
const allPosts = await getCollection('blog')
const tagCounts = new Map()

allPosts
  .filter((post) => !post.data.draft)
  .forEach((post) => {
    post.data.tags.forEach((tag) => {
      tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1)
    })
  })

// Sort tags by count and get top 20
const sortedTags = Array.from(tagCounts.entries())
  .sort((a, b) => b[1] - a[1])
  .slice(0, 20)

// Calculate font sizes based on count
const maxCount = Math.max(...sortedTags.map(([_, count]) => count))
const minCount = Math.min(...sortedTags.map(([_, count]) => count))

const getFontSize = (count: number) => {
  const range = maxCount - minCount || 1
  const normalized = (count - minCount) / range
  return 0.875 + normalized * 0.75 // 0.875rem to 1.625rem
}
---

<div class="tag-cloud">
  <h3 class="mb-4 text-lg font-semibold text-gray-900">Popular Tags</h3>
  <div class="flex flex-wrap gap-2">
    {
      sortedTags.map(([tag, count]) => (
        <a
          href={`/blog/tag/${tag}/`}
          class="tag-link inline-block rounded-full bg-gray-100 px-3 py-1 transition-all hover:bg-blue-100 hover:text-blue-700"
          style={`font-size: ${getFontSize(count)}rem`}
          title={`${count} bài viết`}
        >
          #{tag}
        </a>
      ))
    }
  </div>
</div>

<style>
  .tag-link {
    color: #4b5563;
    text-decoration: none;
  }

  .tag-link:hover {
    transform: translateY(-2px);
  }
</style>
