---
import { getCollection, render } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import Comments from '../../components/CommentsUtterances.astro'
import { SocialShare } from 'astro-social-share'

export async function getStaticPaths() {
  const posts = await getCollection('blog')

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content } = await render(post)

// Format date
const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
})

// Get related posts (same category, exclude current)
const allPosts = await getCollection('blog')
const relatedPosts = allPosts
  .filter((p) => p.id !== post.id && p.data.category === post.data.category && !p.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3)
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  article={{
    publishedTime: post.data.pubDate.toISOString(),
    modifiedTime: post.data.updatedDate?.toISOString(),
    author: post.data.author,
    section: post.data.category,
    tags: post.data.tags,
  }}
>
  <article class="container-narrow py-12">
    <!-- Article Header -->
    <header class="mb-12">
      <h1 class="mb-4 text-4xl font-bold">
        {post.data.title}
      </h1>
      
      <div class="flex items-center gap-2 text-sm opacity-75">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        <time datetime={post.data.pubDate.toISOString()}>
          {formattedDate}
        </time>
        <span>Â·</span>
        <span>{post.data.author}</span>
      </div>
    </header>

    <!-- Article Content -->
    <div class="prose-content">
      <Content />
    </div>

    <!-- Article Footer -->
    <footer class="mt-12 border-t pt-8">
      <!-- Share Buttons -->
      <div class="mb-8">
        <h3 class="mb-4 text-lg font-semibold">Share this post</h3>
        <SocialShare 
          buttons={['twitter', 'facebook', 'linkedin', 'email', 'whatsapp']}
          title={post.data.title}
          description={post.data.description}
          via="khoivan"
          className="flex gap-3"
        />
      </div>

      <!-- Related Posts -->
      {
        relatedPosts.length > 0 && (
          <div>
            <h3 class="mb-4 text-lg font-semibold">Related Posts</h3>
            <div class="grid gap-4 sm:grid-cols-3">
              {relatedPosts.map((relatedPost) => (
                <a
                  href={`/blog/${relatedPost.id}/`}
                  class="group block rounded-lg border p-4 hover:shadow-md"
                  style="border-color: rgba(var(--color-border), 0.2);"
                >
                  <h4 class="font-medium  group-hover:text-blue-600">
                    {relatedPost.data.title}
                  </h4>
                  <p class="mt-1 text-sm opacity-60">
                    {relatedPost.data.pubDate.toLocaleDateString('vi-VN')}
                  </p>
                </a>
              ))}
            </div>
          </div>
        )
      }
    </footer>
  </article>

  <!-- Comments Section -->
  <section class="mx-auto max-w-4xl px-4 py-8 sm:px-6 lg:px-8">
    <Comments />
  </section>
</BaseLayout>
