---
import { getCollection, render } from 'astro:content'
import BaseLayout from '../../layouts/BaseLayout.astro'
import Comments from '../../components/CommentsUtterances.astro'
import { SocialShare } from 'astro-social-share'

export async function getStaticPaths() {
  const posts = await getCollection('blog')

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }))
}

const { post } = Astro.props
const { Content } = await render(post)

// Format date
const formattedDate = post.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
})

// Get related posts (same category, exclude current)
const allPosts = await getCollection('blog')
const relatedPosts = allPosts
  .filter((p) => p.id !== post.id && p.data.category === post.data.category && !p.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3)
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  article={{
    publishedTime: post.data.pubDate.toISOString(),
    modifiedTime: post.data.updatedDate?.toISOString(),
    author: post.data.author,
    section: post.data.category,
    tags: post.data.tags,
  }}
>
  <article class="container-narrow py-8 md:py-12">
    <!-- Go Back Link -->
    <div class="mb-6">
      <a href="/" class="inline-flex items-center gap-1.5 text-sm text-black dark:text-white hover:opacity-80 transition-opacity no-underline group">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 group-hover:-translate-x-0.5 transition-transform" viewBox="0 0 24 24" fill="currentColor">
          <path fill-rule="evenodd" d="M7.72 12.53a.75.75 0 010-1.06l7.5-7.5a.75.75 0 111.06 1.06L9.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5z" clip-rule="evenodd" />
        </svg>
        <span>go back</span>
      </a>
    </div>

    <!-- Article Header -->
    <header class="mb-10">
      <h1 class="mb-4 text-xl md:text-2xl font-bold leading-tight">
        {post.data.title}
      </h1>
      
      <div class="flex items-center gap-2 text-sm opacity-70">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
          <path d="M12.75 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM7.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM8.25 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.75 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM10.5 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM12.75 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM14.25 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 13.5a.75.75 0 100-1.5.75.75 0 000 1.5z"/>
          <path fill-rule="evenodd" d="M6.75 2.25A.75.75 0 017.5 3v1.5h9V3A.75.75 0 0118 3v1.5h.75a3 3 0 013 3v11.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V7.5a3 3 0 013-3H6V3a.75.75 0 01.75-.75zm13.5 9a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5z" clip-rule="evenodd"/>
        </svg>
        <time datetime={post.data.pubDate.toISOString()}>
          {formattedDate}
        </time>
        <span>Â·</span>
        <span>{post.data.author}</span>
      </div>

      <!-- Tags -->
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {post.data.tags.map((tag) => (
            <a 
              href={`/blog/tag/${tag.toLowerCase().replace(/\s+/g, '-')}`}
              class="inline-block px-3 py-1 text-xs rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors no-underline"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </header>

    <!-- Divider -->
    <hr class="mb-8 opacity-20" style="border-color: rgba(var(--color-border), 0.3);" />

    <!-- Article Content -->
    <div class="prose-content">
      <Content />
    </div>

    <!-- Article Footer -->
    <footer class="mt-16 border-t pt-8">
      <!-- Share Buttons -->
      <div class="mb-8">
        <h3 class="mb-4 text-lg font-semibold">Share this post</h3>
        <SocialShare 
          buttons={['twitter', 'facebook', 'linkedin', 'email', 'whatsapp']}
          title={post.data.title}
          description={post.data.description}
          via="khoivan"
          className="flex gap-3"
        />
      </div>

      <!-- Related Posts -->
      {
        relatedPosts.length > 0 && (
          <div>
            <h3 class="mb-4 text-lg font-semibold">Related Posts</h3>
            <div class="grid gap-4 sm:grid-cols-3">
              {relatedPosts.map((relatedPost) => (
                <a
                  href={`/blog/${relatedPost.id}/`}
                  class="group block rounded-lg border p-4 hover:shadow-md"
                  style="border-color: rgba(var(--color-border), 0.2);"
                >
                  <h4 class="font-medium  group-hover:text-blue-600">
                    {relatedPost.data.title}
                  </h4>
                  <p class="mt-1 text-sm opacity-60">
                    {relatedPost.data.pubDate.toLocaleDateString('vi-VN')}
                  </p>
                </a>
              ))}
            </div>
          </div>
        )
      }
    </footer>
  </article>

  <!-- Comments Section -->
  <section class="mx-auto max-w-4xl px-4 py-8 sm:px-6 lg:px-8">
    <Comments />
  </section>
</BaseLayout>
