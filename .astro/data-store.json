[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.9","content-config-digest","eef9ecdfa0196372","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://khoivan.dev\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,56,57,146,147,245,246,368,369],"clean-architecture-android",{"id":11,"data":13,"body":29,"filePath":30,"digest":31,"rendered":32},{"title":14,"description":15,"pubDate":16,"author":17,"category":18,"tags":19,"draft":25,"featured":26,"language":27,"readingTime":28,"categorySlug":18},"Clean Architecture trong Android - Hướng dẫn từ A-Z","Tìm hiểu cách apply Clean Architecture vào dự án Android thực tế với Kotlin, MVVM và Jetpack Compose",["Date","2024-01-10T00:00:00.000Z"],"Khoi Van","tutorial",[20,21,22,23,24],"android","clean-architecture","kotlin","mvvm","jetpack-compose",false,true,"vi","15 min read","## Giới thiệu\n\nClean Architecture là một pattern được Uncle Bob (Robert C. Martin) giới thiệu,\ngiúp tạo ra code base dễ maintain, test và scale. Trong bài viết này, tôi sẽ\nchia sẻ cách apply Clean Architecture vào dự án Android.\n\n## Tại sao cần Clean Architecture?\n\nSau 8 năm làm Android, tôi nhận thấy nhiều dự án gặp vấn đề:\n\n- Code khó maintain khi app lớn dần\n- Khó viết unit test\n- Business logic bị trộn lẫn với UI\n- Khó thay đổi hoặc thêm features mới\n\nClean Architecture giải quyết tất cả vấn đề trên!\n\n## Các tầng trong Clean Architecture\n\n### 1. Domain Layer (Core Business)\n\n```kotlin\n// UseCase example\nclass GetUserUseCase(\n    private val userRepository: UserRepository\n) {\n    suspend operator fun invoke(userId: String): User {\n        return userRepository.getUser(userId)\n    }\n}\n```","src/content/blog/clean-architecture-android.md","d0c956f02a5968f7",{"html":33,"metadata":34},"\u003Ch2 id=\"giới-thiệu\">Giới thiệu\u003C/h2>\n\u003Cp>Clean Architecture là một pattern được Uncle Bob (Robert C. Martin) giới thiệu,\ngiúp tạo ra code base dễ maintain, test và scale. Trong bài viết này, tôi sẽ\nchia sẻ cách apply Clean Architecture vào dự án Android.\u003C/p>\n\u003Ch2 id=\"tại-sao-cần-clean-architecture\">Tại sao cần Clean Architecture?\u003C/h2>\n\u003Cp>Sau 8 năm làm Android, tôi nhận thấy nhiều dự án gặp vấn đề:\u003C/p>\n\u003Cul>\n\u003Cli>Code khó maintain khi app lớn dần\u003C/li>\n\u003Cli>Khó viết unit test\u003C/li>\n\u003Cli>Business logic bị trộn lẫn với UI\u003C/li>\n\u003Cli>Khó thay đổi hoặc thêm features mới\u003C/li>\n\u003C/ul>\n\u003Cp>Clean Architecture giải quyết tất cả vấn đề trên!\u003C/p>\n\u003Ch2 id=\"các-tầng-trong-clean-architecture\">Các tầng trong Clean Architecture\u003C/h2>\n\u003Ch3 id=\"1-domain-layer-core-business\">1. Domain Layer (Core Business)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// UseCase example\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> GetUserUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userRepository: \u003C/span>\u003Cspan style=\"color:#B392F0\">UserRepository\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> operator\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> invoke\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userRepository.\u003C/span>\u003Cspan style=\"color:#B392F0\">getUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":35,"localImagePaths":50,"remoteImagePaths":51,"frontmatter":52,"imagePaths":55},[36,40,43,46],{"depth":37,"slug":38,"text":39},2,"giới-thiệu","Giới thiệu",{"depth":37,"slug":41,"text":42},"tại-sao-cần-clean-architecture","Tại sao cần Clean Architecture?",{"depth":37,"slug":44,"text":45},"các-tầng-trong-clean-architecture","Các tầng trong Clean Architecture",{"depth":47,"slug":48,"text":49},3,"1-domain-layer-core-business","1. Domain Layer (Core Business)",[],[],{"title":14,"description":15,"pubDate":53,"author":17,"category":18,"tags":54,"featured":26,"language":27,"readingTime":28},["Date","2024-01-10T00:00:00.000Z"],[20,21,22,23,24],[],"jetpack-compose-best-practices",{"id":56,"data":58,"body":66,"filePath":67,"digest":68,"rendered":69},{"title":59,"description":60,"pubDate":61,"author":17,"category":18,"tags":62,"draft":25,"featured":25,"language":27,"readingTime":65,"categorySlug":18},"Jetpack Compose Best Practices - Từ cơ bản đến nâng cao","Tổng hợp các best practices khi làm việc với Jetpack Compose, từ performance optimization đến state management",["Date","2024-01-15T00:00:00.000Z"],[24,20,22,63,64],"ui","performance","12 min read","## Giới thiệu\n\nJetpack Compose đã thay đổi hoàn toàn cách chúng ta xây dựng UI trong Android. Sau 2 năm làm việc với Compose trong production, tôi muốn chia sẻ những best practices giúp code của bạn clean, performant và maintainable.\n\n## 1. State Management\n\n### Remember vs RememberSaveable\n\n```kotlin\n@Composable\nfun CounterScreen() {\n    // Sẽ bị reset khi configuration change\n    var count by remember { mutableStateOf(0) }\n\n    // Được preserve qua configuration changes\n    var savedCount by rememberSaveable { mutableStateOf(0) }\n}\n```\n\n### State Hoisting\n\nLuôn hoist state lên component cha khi cần share giữa nhiều composables:\n\n```kotlin\n@Composable\nfun TodoScreen() {\n    var todos by remember { mutableStateOf(listOf\u003CTodo>()) }\n\n    TodoList(\n        todos = todos,\n        onTodoClick = { todo ->\n            // Handle click\n        }\n    )\n}\n\n@Composable\nfun TodoList(\n    todos: List\u003CTodo>,\n    onTodoClick: (Todo) -> Unit\n) {\n    // Stateless composable\n}\n```\n\n## 2. Performance Optimization\n\n### Stable Types\n\nĐánh dấu data classes với `@Stable` hoặc `@Immutable`:\n\n```kotlin\n@Stable\ndata class User(\n    val id: String,\n    val name: String,\n    val avatar: String\n)\n```\n\n### Remember Lambda\n\nTránh tạo lambda mới trong mỗi recomposition:\n\n```kotlin\n@Composable\nfun UserItem(user: User, onClick: () -> Unit) {\n    // ❌ Bad - tạo lambda mới mỗi lần\n    Button(onClick = { onClick() }) {\n        Text(user.name)\n    }\n\n    // ✅ Good - pass trực tiếp\n    Button(onClick = onClick) {\n        Text(user.name)\n    }\n}\n```\n\n### LazyColumn Keys\n\nLuôn provide stable keys cho LazyColumn items:\n\n```kotlin\nLazyColumn {\n    items(\n        items = users,\n        key = { user -> user.id } // Stable key\n    ) { user ->\n        UserItem(user)\n    }\n}\n```\n\n## 3. Side Effects\n\n### LaunchedEffect vs SideEffect vs DisposableEffect\n\n```kotlin\n@Composable\nfun LocationScreen(locationService: LocationService) {\n    // Run once when key changes\n    LaunchedEffect(locationService) {\n        locationService.startTracking()\n    }\n\n    // Run on every recomposition\n    SideEffect {\n        analytics.logScreenView(\"location\")\n    }\n\n    // With cleanup\n    DisposableEffect(locationService) {\n        val listener = locationService.addListener { }\n        onDispose {\n            locationService.removeListener(listener)\n        }\n    }\n}\n```\n\n## 4. Modifiers Best Practices\n\n### Order Matters\n\n```kotlin\n@Composable\nfun ClickableCard() {\n    Box(\n        modifier = Modifier\n            .padding(16.dp)      // Padding trước\n            .clickable { }       // Clickable sau\n            .background(Color.Blue)\n    )\n}\n```\n\n### Reuse Modifiers\n\n```kotlin\n@Composable\nfun MyScreen() {\n    val commonModifier = Modifier\n        .fillMaxWidth()\n        .padding(horizontal = 16.dp)\n\n    Column {\n        Text(\"Title\", modifier = commonModifier)\n        Text(\"Subtitle\", modifier = commonModifier)\n    }\n}\n```\n\n## 5. Preview Best Practices\n\n### Multiple Previews\n\n```kotlin\n@Preview(name = \"Light Mode\")\n@Preview(name = \"Dark Mode\", uiMode = UI_MODE_NIGHT_YES)\n@Preview(name = \"Large Font\", fontScale = 1.5f)\n@Composable\nfun UserCardPreview() {\n    MyTheme {\n        UserCard(\n            user = User(\n                id = \"1\",\n                name = \"John Doe\",\n                avatar = \"https://example.com/avatar.jpg\"\n            )\n        )\n    }\n}\n```\n\n## 6. Navigation\n\n### Type-safe Navigation\n\n```kotlin\n@Serializable\ndata class ProfileRoute(val userId: String)\n\n@Composable\nfun NavigationGraph(navController: NavHostController) {\n    NavHost(navController, startDestination = \"home\") {\n        composable(\"home\") {\n            HomeScreen(\n                onProfileClick = { userId ->\n                    navController.navigate(ProfileRoute(userId))\n                }\n            )\n        }\n\n        composable\u003CProfileRoute> { backStackEntry ->\n            val route = backStackEntry.toRoute\u003CProfileRoute>()\n            ProfileScreen(userId = route.userId)\n        }\n    }\n}\n```\n\n## 7. Testing\n\n### UI Testing\n\n```kotlin\n@Test\nfun userCard_displaysCorrectInfo() {\n    composeTestRule.setContent {\n        UserCard(testUser)\n    }\n\n    composeTestRule\n        .onNodeWithText(testUser.name)\n        .assertIsDisplayed()\n\n    composeTestRule\n        .onNodeWithContentDescription(\"User avatar\")\n        .assertExists()\n}\n```\n\n## 8. Common Pitfalls to Avoid\n\n### 1. Using MutableState directly in ViewModel\n\n```kotlin\n// ❌ Bad\nclass MyViewModel : ViewModel() {\n    val state = mutableStateOf(UiState())\n}\n\n// ✅ Good\nclass MyViewModel : ViewModel() {\n    private val _state = MutableStateFlow(UiState())\n    val state = _state.asStateFlow()\n}\n```\n\n### 2. Not using derivedStateOf\n\n```kotlin\n@Composable\nfun SearchScreen(items: List\u003CItem>) {\n    var query by remember { mutableStateOf(\"\") }\n\n    // ❌ Bad - recalculates on every recomposition\n    val filtered = items.filter { it.name.contains(query) }\n\n    // ✅ Good - only recalculates when dependencies change\n    val filtered by remember(items, query) {\n        derivedStateOf {\n            items.filter { it.name.contains(query) }\n        }\n    }\n}\n```\n\n## Kết luận\n\nJetpack Compose là một công cụ mạnh mẽ, nhưng để sử dụng hiệu quả cần hiểu rõ các best practices. Hy vọng những tips này giúp bạn viết Compose code tốt hơn!\n\nCó câu hỏi? Comment bên dưới hoặc connect với mình qua [LinkedIn](https://linkedin.com/in/khoivan)!","src/content/blog/jetpack-compose-best-practices.md","b6891517870af893",{"html":70,"metadata":71},"\u003Ch2 id=\"giới-thiệu\">Giới thiệu\u003C/h2>\n\u003Cp>Jetpack Compose đã thay đổi hoàn toàn cách chúng ta xây dựng UI trong Android. Sau 2 năm làm việc với Compose trong production, tôi muốn chia sẻ những best practices giúp code của bạn clean, performant và maintainable.\u003C/p>\n\u003Ch2 id=\"1-state-management\">1. State Management\u003C/h2>\n\u003Ch3 id=\"remember-vs-remembersaveable\">Remember vs RememberSaveable\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> CounterScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Sẽ bị reset khi configuration change\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> count \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Được preserve qua configuration changes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> savedCount \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> rememberSaveable\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"state-hoisting\">State Hoisting\u003C/h3>\n\u003Cp>Luôn hoist state lên component cha khi cần share giữa nhiều composables:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> TodoScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todos \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">listOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    TodoList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        todos \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todos,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        onTodoClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { todo \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Handle click\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> TodoList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    todos: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    onTodoClick: (\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) -> \u003C/span>\u003Cspan style=\"color:#B392F0\">Unit\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Stateless composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"2-performance-optimization\">2. Performance Optimization\u003C/h2>\n\u003Ch3 id=\"stable-types\">Stable Types\u003C/h3>\n\u003Cp>Đánh dấu data classes với \u003Ccode>@Stable\u003C/code> hoặc \u003Ccode>@Immutable\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Stable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> id: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> avatar: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"remember-lambda\">Remember Lambda\u003C/h3>\n\u003Cp>Tránh tạo lambda mới trong mỗi recomposition:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user: \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, onClick: () \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Unit) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ❌ Bad - tạo lambda mới mỗi lần\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(onClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">onClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ✅ Good - pass trực tiếp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(onClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> onClick) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"lazycolumn-keys\">LazyColumn Keys\u003C/h3>\n\u003Cp>Luôn provide stable keys cho LazyColumn items:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">LazyColumn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    items\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        items \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        key \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { user \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user.id } \u003C/span>\u003Cspan style=\"color:#6A737D\">// Stable key\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ) { user \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"3-side-effects\">3. Side Effects\u003C/h2>\n\u003Ch3 id=\"launchedeffect-vs-sideeffect-vs-disposableeffect\">LaunchedEffect vs SideEffect vs DisposableEffect\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> LocationScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService: \u003C/span>\u003Cspan style=\"color:#B392F0\">LocationService\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Run once when key changes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    LaunchedEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">startTracking\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Run on every recomposition\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    SideEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        analytics.\u003C/span>\u003Cspan style=\"color:#B392F0\">logScreenView\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"location\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // With cleanup\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    DisposableEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> listener \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">addListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        onDispose\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">removeListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(listener)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"4-modifiers-best-practices\">4. Modifiers Best Practices\u003C/h2>\n\u003Ch3 id=\"order-matters\">Order Matters\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> ClickableCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Box\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Modifier\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.dp)      \u003C/span>\u003Cspan style=\"color:#6A737D\">// Padding trước\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">clickable\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { }       \u003C/span>\u003Cspan style=\"color:#6A737D\">// Clickable sau\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Color.Blue)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"reuse-modifiers\">Reuse Modifiers\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Modifier\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">fillMaxWidth\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(horizontal \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.dp)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Column\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Subtitle\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"5-preview-best-practices\">5. Preview Best Practices\u003C/h2>\n\u003Ch3 id=\"multiple-previews\">Multiple Previews\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Light Mode\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Dark Mode\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, uiMode \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> UI_MODE_NIGHT_YES)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Large Font\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, fontScale \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.5f\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserCardPreview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    MyTheme\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            user \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"John Doe\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                avatar \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"https://example.com/avatar.jpg\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"6-navigation\">6. Navigation\u003C/h2>\n\u003Ch3 id=\"type-safe-navigation\">Type-safe Navigation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Serializable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> NavigationGraph\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(navController: \u003C/span>\u003Cspan style=\"color:#B392F0\">NavHostController\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    NavHost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(navController, startDestination \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"home\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        composable\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"home\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            HomeScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                onProfileClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { userId \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    navController.\u003C/span>\u003Cspan style=\"color:#B392F0\">navigate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        composable\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> { backStackEntry \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> route \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> backStackEntry.\u003C/span>\u003Cspan style=\"color:#B392F0\">toRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            ProfileScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> route.userId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"7-testing\">7. Testing\u003C/h2>\n\u003Ch3 id=\"ui-testing\">UI Testing\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> userCard_displaysCorrectInfo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule.\u003C/span>\u003Cspan style=\"color:#B392F0\">setContent\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(testUser)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">onNodeWithText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(testUser.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">assertIsDisplayed\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">onNodeWithContentDescription\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"User avatar\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">assertExists\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"8-common-pitfalls-to-avoid\">8. Common Pitfalls to Avoid\u003C/h2>\n\u003Ch3 id=\"1-using-mutablestate-directly-in-viewmodel\">1. Using MutableState directly in ViewModel\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ❌ Bad\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ✅ Good\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _state.\u003C/span>\u003Cspan style=\"color:#B392F0\">asStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-not-using-derivedstateof\">2. Not using derivedStateOf\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> SearchScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(items: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> query \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ❌ Bad - recalculates on every recomposition\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> filtered \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> items.\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.name.\u003C/span>\u003Cspan style=\"color:#B392F0\">contains\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ✅ Good - only recalculates when dependencies change\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> filtered \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(items, query) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        derivedStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            items.\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.name.\u003C/span>\u003Cspan style=\"color:#B392F0\">contains\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"kết-luận\">Kết luận\u003C/h2>\n\u003Cp>Jetpack Compose là một công cụ mạnh mẽ, nhưng để sử dụng hiệu quả cần hiểu rõ các best practices. Hy vọng những tips này giúp bạn viết Compose code tốt hơn!\u003C/p>\n\u003Cp>Có câu hỏi? Comment bên dưới hoặc connect với mình qua \u003Ca href=\"https://linkedin.com/in/khoivan\">LinkedIn\u003C/a>!\u003C/p>",{"headings":72,"localImagePaths":140,"remoteImagePaths":141,"frontmatter":142,"imagePaths":145},[73,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125,128,131,134,137],{"depth":37,"slug":38,"text":39},{"depth":37,"slug":75,"text":76},"1-state-management","1. State Management",{"depth":47,"slug":78,"text":79},"remember-vs-remembersaveable","Remember vs RememberSaveable",{"depth":47,"slug":81,"text":82},"state-hoisting","State Hoisting",{"depth":37,"slug":84,"text":85},"2-performance-optimization","2. Performance Optimization",{"depth":47,"slug":87,"text":88},"stable-types","Stable Types",{"depth":47,"slug":90,"text":91},"remember-lambda","Remember Lambda",{"depth":47,"slug":93,"text":94},"lazycolumn-keys","LazyColumn Keys",{"depth":37,"slug":96,"text":97},"3-side-effects","3. Side Effects",{"depth":47,"slug":99,"text":100},"launchedeffect-vs-sideeffect-vs-disposableeffect","LaunchedEffect vs SideEffect vs DisposableEffect",{"depth":37,"slug":102,"text":103},"4-modifiers-best-practices","4. Modifiers Best Practices",{"depth":47,"slug":105,"text":106},"order-matters","Order Matters",{"depth":47,"slug":108,"text":109},"reuse-modifiers","Reuse Modifiers",{"depth":37,"slug":111,"text":112},"5-preview-best-practices","5. Preview Best Practices",{"depth":47,"slug":114,"text":115},"multiple-previews","Multiple Previews",{"depth":37,"slug":117,"text":118},"6-navigation","6. Navigation",{"depth":47,"slug":120,"text":121},"type-safe-navigation","Type-safe Navigation",{"depth":37,"slug":123,"text":124},"7-testing","7. Testing",{"depth":47,"slug":126,"text":127},"ui-testing","UI Testing",{"depth":37,"slug":129,"text":130},"8-common-pitfalls-to-avoid","8. Common Pitfalls to Avoid",{"depth":47,"slug":132,"text":133},"1-using-mutablestate-directly-in-viewmodel","1. Using MutableState directly in ViewModel",{"depth":47,"slug":135,"text":136},"2-not-using-derivedstateof","2. Not using derivedStateOf",{"depth":37,"slug":138,"text":139},"kết-luận","Kết luận",[],[],{"title":59,"description":60,"pubDate":143,"author":17,"category":18,"tags":144,"featured":25,"language":27,"readingTime":65},["Date","2024-01-15T00:00:00.000Z"],[24,20,22,63,64],[],"kotlin-coroutines-flow",{"id":146,"data":148,"body":159,"filePath":160,"digest":161,"rendered":162},{"title":149,"description":150,"pubDate":151,"author":17,"category":152,"tags":153,"draft":25,"featured":26,"language":27,"readingTime":158,"categorySlug":152},"Kotlin Coroutines & Flow - Xử lý bất đồng bộ như một Pro","Deep dive vào Kotlin Coroutines và Flow, từ basic concepts đến advanced patterns trong Android development",["Date","2024-01-20T00:00:00.000Z"],"article",[22,154,155,20,156,157],"coroutines","flow","async","reactive","18 min read","## Overview\n\nKotlin Coroutines và Flow đã trở thành standard để xử lý async operations trong Android. Bài viết này sẽ cover từ basics đến advanced patterns mà tôi đã áp dụng trong các dự án thực tế.\n\n## Phần 1: Coroutines Fundamentals\n\n### Coroutine Builders\n\n```kotlin\nclass UserRepository {\n    // launch - Fire and forget\n    fun updateUserInBackground(user: User) {\n        viewModelScope.launch {\n            api.updateUser(user)\n        }\n    }\n\n    // async - Return a value\n    suspend fun fetchUserData(): User {\n        return coroutineScope {\n            val profile = async { api.getProfile() }\n            val settings = async { api.getSettings() }\n\n            User(\n                profile = profile.await(),\n                settings = settings.await()\n            )\n        }\n    }\n}\n```\n\n### Coroutine Context & Dispatchers\n\n```kotlin\nclass DataProcessor {\n    suspend fun processData(data: List\u003CData>) {\n        withContext(Dispatchers.Default) {\n            // CPU-intensive work\n            data.map { transform(it) }\n        }\n    }\n\n    suspend fun saveToFile(content: String) {\n        withContext(Dispatchers.IO) {\n            // I/O operations\n            file.writeText(content)\n        }\n    }\n\n    fun updateUI(result: String) {\n        lifecycleScope.launch(Dispatchers.Main) {\n            // UI updates\n            textView.text = result\n        }\n    }\n}\n```\n\n### Structured Concurrency\n\n```kotlin\nclass OrderService {\n    suspend fun processOrder(orderId: String) = coroutineScope {\n        // All child coroutines must complete\n        launch { validateOrder(orderId) }\n        launch { checkInventory(orderId) }\n        launch { processPayment(orderId) }\n\n        // Parent waits for all children\n    }\n\n    suspend fun processOrderWithTimeout(orderId: String) {\n        withTimeout(5000) {\n            processOrder(orderId)\n        }\n    }\n}\n```\n\n## Phần 2: Exception Handling\n\n### Try-Catch vs CoroutineExceptionHandler\n\n```kotlin\nclass ExceptionHandlingExample {\n    private val exceptionHandler = CoroutineExceptionHandler { _, exception ->\n        Log.e(\"Coroutine\", \"Caught $exception\")\n    }\n\n    fun example1() {\n        // Local exception handling\n        viewModelScope.launch {\n            try {\n                riskyOperation()\n            } catch (e: Exception) {\n                handleError(e)\n            }\n        }\n    }\n\n    fun example2() {\n        // Global exception handling\n        viewModelScope.launch(exceptionHandler) {\n            riskyOperation() // Exception will be caught by handler\n        }\n    }\n}\n```\n\n### SupervisorScope\n\n```kotlin\nclass ParallelTasksExample {\n    suspend fun executeTasksIndependently() {\n        supervisorScope {\n            // One failure doesn't cancel others\n            launch { task1() }\n            launch { task2() }\n            launch { task3() }\n        }\n    }\n}\n```\n\n## Phần 3: Flow - Reactive Streams\n\n### Creating Flows\n\n```kotlin\nclass FlowExamples {\n    // Simple flow\n    fun numbersFlow() = flow {\n        for (i in 1..5) {\n            delay(1000)\n            emit(i)\n        }\n    }\n\n    // Flow from suspend function\n    fun userFlow() = flow {\n        emit(fetchUserFromNetwork())\n    }\n\n    // StateFlow for UI state\n    private val _uiState = MutableStateFlow(UiState())\n    val uiState: StateFlow\u003CUiState> = _uiState.asStateFlow()\n\n    // SharedFlow for events\n    private val _events = MutableSharedFlow\u003CEvent>()\n    val events = _events.asSharedFlow()\n}\n```\n\n### Flow Operators\n\n```kotlin\nclass FlowOperators {\n    fun demonstrateOperators() {\n        flowOf(1, 2, 3, 4, 5)\n            .filter { it % 2 == 0 }\n            .map { it * it }\n            .take(2)\n            .collect { println(it) } // 4, 16\n    }\n\n    fun combineFlows() {\n        val flow1 = flowOf(1, 2, 3)\n        val flow2 = flowOf(\"A\", \"B\", \"C\")\n\n        flow1.zip(flow2) { num, letter ->\n            \"$num$letter\"\n        }.collect { println(it) } // 1A, 2B, 3C\n    }\n}\n```\n\n### Flow Context Preservation\n\n```kotlin\nclass FlowContext {\n    fun flowOnDifferentContext() {\n        flow {\n            // Runs on IO dispatcher\n            emit(fetchDataFromNetwork())\n        }\n        .flowOn(Dispatchers.IO)\n        .map {\n            // Runs on Default dispatcher\n            processData(it)\n        }\n        .flowOn(Dispatchers.Default)\n        .collect {\n            // Runs on Main dispatcher\n            updateUI(it)\n        }\n    }\n}\n```\n\n## Phần 4: Advanced Patterns\n\n### Retry với Exponential Backoff\n\n```kotlin\nsuspend fun \u003CT> retryWithBackoff(\n    times: Int = 3,\n    initialDelay: Long = 100,\n    factor: Double = 2.0,\n    block: suspend () -> T\n): T {\n    var currentDelay = initialDelay\n    repeat(times - 1) {\n        try {\n            return block()\n        } catch (e: Exception) {\n            delay(currentDelay)\n            currentDelay = (currentDelay * factor).toLong()\n        }\n    }\n    return block() // Last attempt\n}\n```\n\n### Debounce Search\n\n```kotlin\nclass SearchViewModel : ViewModel() {\n    private val searchQuery = MutableStateFlow(\"\")\n\n    val searchResults = searchQuery\n        .debounce(300)\n        .filter { it.length >= 3 }\n        .distinctUntilChanged()\n        .flatMapLatest { query ->\n            searchRepository.search(query)\n        }\n        .stateIn(\n            viewModelScope,\n            SharingStarted.WhileSubscribed(5000),\n            emptyList()\n        )\n}\n```\n\n### Channel for Actor Pattern\n\n```kotlin\nclass CounterActor {\n    private val channel = Channel\u003CCounterMsg>()\n    private var counter = 0\n\n    sealed class CounterMsg {\n        object Increment : CounterMsg()\n        class GetValue(val response: CompletableDeferred\u003CInt>) : CounterMsg()\n    }\n\n    fun start() = GlobalScope.launch {\n        for (msg in channel) {\n            when (msg) {\n                is CounterMsg.Increment -> counter++\n                is CounterMsg.GetValue -> msg.response.complete(counter)\n            }\n        }\n    }\n\n    suspend fun increment() {\n        channel.send(CounterMsg.Increment)\n    }\n\n    suspend fun getValue(): Int {\n        val response = CompletableDeferred\u003CInt>()\n        channel.send(CounterMsg.GetValue(response))\n        return response.await()\n    }\n}\n```\n\n## Phần 5: Testing Coroutines\n\n### Testing với runTest\n\n```kotlin\nclass UserRepositoryTest {\n    @Test\n    fun `test user fetching`() = runTest {\n        val repository = UserRepository(mockApi)\n\n        val user = repository.getUser(\"123\")\n\n        assertEquals(\"John\", user.name)\n    }\n\n    @Test\n    fun `test flow emissions`() = runTest {\n        val flow = repository.getUserFlow()\n\n        val results = flow.take(3).toList()\n\n        assertEquals(3, results.size)\n    }\n}\n```\n\n### TestDispatcher\n\n```kotlin\nclass ViewModelTest {\n    private val testDispatcher = StandardTestDispatcher()\n\n    @Before\n    fun setup() {\n        Dispatchers.setMain(testDispatcher)\n    }\n\n    @After\n    fun tearDown() {\n        Dispatchers.resetMain()\n    }\n\n    @Test\n    fun `test loading state`() = runTest {\n        val viewModel = MyViewModel()\n\n        viewModel.loadData()\n        advanceUntilIdle()\n\n        assertFalse(viewModel.isLoading.value)\n    }\n}\n```\n\n## Best Practices\n\n### 1. Scope Management\n\n```kotlin\nclass MyViewModel : ViewModel() {\n    // Use viewModelScope for ViewModel\n    fun loadData() {\n        viewModelScope.launch {\n            // Automatically cancelled when ViewModel is cleared\n        }\n    }\n}\n\nclass MyFragment : Fragment() {\n    // Use lifecycleScope for Fragment/Activity\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        viewLifecycleOwner.lifecycleScope.launch {\n            repeatOnLifecycle(Lifecycle.State.STARTED) {\n                // Collect flows safely\n                viewModel.uiState.collect { }\n            }\n        }\n    }\n}\n```\n\n### 2. Cancellation\n\n```kotlin\nclass CancellationExample {\n    suspend fun processLargeData(data: List\u003CData>) {\n        coroutineScope {\n            data.forEach { item ->\n                // Check cancellation regularly\n                ensureActive()\n                processItem(item)\n            }\n        }\n    }\n}\n```\n\n### 3. Resource Management\n\n```kotlin\nclass ResourceManager {\n    suspend fun useResource() {\n        val resource = acquireResource()\n        try {\n            coroutineScope {\n                // Use resource\n            }\n        } finally {\n            // Always release, even if cancelled\n            resource.release()\n        }\n    }\n}\n```\n\n## Performance Tips\n\n1. **Use appropriate dispatchers** - Don't block Main thread\n2. **Avoid GlobalScope** - Use structured concurrency\n3. **Cancel unused coroutines** - Prevent memory leaks\n4. **Use StateFlow for UI state** - Better than LiveData\n5. **Buffer flows when needed** - Improve performance\n\n## Kết luận\n\nKotlin Coroutines và Flow provide powerful tools cho async programming. Key takeaways:\n\n- Master structured concurrency\n- Understand dispatchers và contexts\n- Use Flow cho reactive programming\n- Always handle exceptions properly\n- Test thoroughly với proper tools\n\nHappy coding! 🚀","src/content/blog/kotlin-coroutines-flow.md","933792636da7066e",{"html":163,"metadata":164},"\u003Ch2 id=\"overview\">Overview\u003C/h2>\n\u003Cp>Kotlin Coroutines và Flow đã trở thành standard để xử lý async operations trong Android. Bài viết này sẽ cover từ basics đến advanced patterns mà tôi đã áp dụng trong các dự án thực tế.\u003C/p>\n\u003Ch2 id=\"phần-1-coroutines-fundamentals\">Phần 1: Coroutines Fundamentals\u003C/h2>\n\u003Ch3 id=\"coroutine-builders\">Coroutine Builders\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserRepository\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // launch - Fire and forget\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> updateUserInBackground\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user: \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModelScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            api.\u003C/span>\u003Cspan style=\"color:#B392F0\">updateUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // async - Return a value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> fetchUserData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#B392F0\"> coroutineScope\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> profile \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { api.\u003C/span>\u003Cspan style=\"color:#B392F0\">getProfile\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> settings \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> async\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { api.\u003C/span>\u003Cspan style=\"color:#B392F0\">getSettings\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                profile \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> profile.\u003C/span>\u003Cspan style=\"color:#B392F0\">await\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                settings \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> settings.\u003C/span>\u003Cspan style=\"color:#B392F0\">await\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"coroutine-context--dispatchers\">Coroutine Context &#x26; Dispatchers\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> DataProcessor\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> processData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        withContext\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Dispatchers.Default) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // CPU-intensive work\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> saveToFile\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(content: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        withContext\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Dispatchers.IO) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // I/O operations\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            file.\u003C/span>\u003Cspan style=\"color:#B392F0\">writeText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(content)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> updateUI\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lifecycleScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Dispatchers.Main) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // UI updates\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            textView.text \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"structured-concurrency\">Structured Concurrency\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> OrderService\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> processOrder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> coroutineScope\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // All child coroutines must complete\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">validateOrder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">checkInventory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">processPayment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Parent waits for all children\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> processOrderWithTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        withTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            processOrder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(orderId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"phần-2-exception-handling\">Phần 2: Exception Handling\u003C/h2>\n\u003Ch3 id=\"try-catch-vs-coroutineexceptionhandler\">Try-Catch vs CoroutineExceptionHandler\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ExceptionHandlingExample\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> exceptionHandler \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> CoroutineExceptionHandler\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { _, exception \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        Log.\u003C/span>\u003Cspan style=\"color:#B392F0\">e\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Coroutine\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Caught \u003C/span>\u003Cspan style=\"color:#79B8FF\">$exception\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> example1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Local exception handling\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModelScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                riskyOperation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (e: \u003C/span>\u003Cspan style=\"color:#B392F0\">Exception\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                handleError\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> example2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Global exception handling\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModelScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(exceptionHandler) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            riskyOperation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#6A737D\">// Exception will be caught by handler\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"supervisorscope\">SupervisorScope\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ParallelTasksExample\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> executeTasksIndependently\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        supervisorScope\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // One failure doesn't cancel others\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">task1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">task2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">task3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"phần-3-flow---reactive-streams\">Phần 3: Flow - Reactive Streams\u003C/h2>\n\u003Ch3 id=\"creating-flows\">Creating Flows\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> FlowExamples\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Simple flow\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> numbersFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> flow\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (i \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">..\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            emit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(i)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Flow from suspend function\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> userFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> flow\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        emit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">fetchUserFromNetwork\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // StateFlow for UI state\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _uiState \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> uiState: \u003C/span>\u003Cspan style=\"color:#B392F0\">StateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">asStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // SharedFlow for events\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _events \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableSharedFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Event\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> events \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _events.\u003C/span>\u003Cspan style=\"color:#B392F0\">asSharedFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"flow-operators\">Flow Operators\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> FlowOperators\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> demonstrateOperators\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        flowOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it \u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#F97583\"> ==\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> it }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">take\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">collect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it) } \u003C/span>\u003Cspan style=\"color:#6A737D\">// 4, 16\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> combineFlows\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> flow1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> flowOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> flow2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> flowOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"A\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"B\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"C\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        flow1.\u003C/span>\u003Cspan style=\"color:#B392F0\">zip\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(flow2) { num, letter \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">$num$letter\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }.\u003C/span>\u003Cspan style=\"color:#B392F0\">collect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">println\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it) } \u003C/span>\u003Cspan style=\"color:#6A737D\">// 1A, 2B, 3C\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"flow-context-preservation\">Flow Context Preservation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> FlowContext\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> flowOnDifferentContext\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        flow\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Runs on IO dispatcher\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            emit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">fetchDataFromNetwork\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">flowOn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Dispatchers.IO)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">map\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Runs on Default dispatcher\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            processData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">flowOn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Dispatchers.Default)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">collect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Runs on Main dispatcher\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            updateUI\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"phần-4-advanced-patterns\">Phần 4: Advanced Patterns\u003C/h2>\n\u003Ch3 id=\"retry-với-exponential-backoff\">Retry với Exponential Backoff\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> \u003C/span>\u003Cspan style=\"color:#B392F0\">retryWithBackoff\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    times: \u003C/span>\u003Cspan style=\"color:#B392F0\">Int\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    initialDelay: \u003C/span>\u003Cspan style=\"color:#B392F0\">Long\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    factor: \u003C/span>\u003Cspan style=\"color:#B392F0\">Double\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2.0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    block: \u003C/span>\u003Cspan style=\"color:#B392F0\">suspend\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> T\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">T\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> currentDelay \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> initialDelay\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    repeat\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(times \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            return\u003C/span>\u003Cspan style=\"color:#B392F0\"> block\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (e: \u003C/span>\u003Cspan style=\"color:#B392F0\">Exception\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(currentDelay)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            currentDelay \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (currentDelay \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> factor).\u003C/span>\u003Cspan style=\"color:#B392F0\">toLong\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    return\u003C/span>\u003Cspan style=\"color:#B392F0\"> block\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#6A737D\">// Last attempt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"debounce-search\">Debounce Search\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> SearchViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> searchQuery \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> searchResults \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> searchQuery\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">debounce\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">300\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.length \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">distinctUntilChanged\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">flatMapLatest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { query \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            searchRepository.\u003C/span>\u003Cspan style=\"color:#B392F0\">search\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">stateIn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            viewModelScope,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            SharingStarted.\u003C/span>\u003Cspan style=\"color:#B392F0\">WhileSubscribed\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            emptyList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"channel-for-actor-pattern\">Channel for Actor Pattern\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> CounterActor\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> channel \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> Channel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">CounterMsg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> counter \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    sealed\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> CounterMsg\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        object\u003C/span>\u003Cspan style=\"color:#B392F0\"> Increment\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">CounterMsg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        class\u003C/span>\u003Cspan style=\"color:#B392F0\"> GetValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response: \u003C/span>\u003Cspan style=\"color:#B392F0\">CompletableDeferred\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) : \u003C/span>\u003Cspan style=\"color:#B392F0\">CounterMsg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> start\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> GlobalScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (msg \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> channel) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            when\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (msg) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                is\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> CounterMsg.Increment \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> counter\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                is\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> CounterMsg.GetValue \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> msg.response.\u003C/span>\u003Cspan style=\"color:#B392F0\">complete\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(counter)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> increment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        channel.\u003C/span>\u003Cspan style=\"color:#B392F0\">send\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(CounterMsg.Increment)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> getValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Int\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> CompletableDeferred\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Int\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        channel.\u003C/span>\u003Cspan style=\"color:#B392F0\">send\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(CounterMsg.\u003C/span>\u003Cspan style=\"color:#B392F0\">GetValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(response))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response.\u003C/span>\u003Cspan style=\"color:#B392F0\">await\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"phần-5-testing-coroutines\">Phần 5: Testing Coroutines\u003C/h2>\n\u003Ch3 id=\"testing-với-runtest\">Testing với runTest\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserRepositoryTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> `test user fetching`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> runTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserRepository\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(mockApi)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">getUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"123\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        assertEquals\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"John\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, user.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> `test flow emissions`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> runTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> flow \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">getUserFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> results \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> flow.\u003C/span>\u003Cspan style=\"color:#B392F0\">take\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">toList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        assertEquals\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, results.size)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"testdispatcher\">TestDispatcher\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ViewModelTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> testDispatcher \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> StandardTestDispatcher\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Before\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> setup\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        Dispatchers.\u003C/span>\u003Cspan style=\"color:#B392F0\">setMain\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(testDispatcher)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @After\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> tearDown\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        Dispatchers.\u003C/span>\u003Cspan style=\"color:#B392F0\">resetMain\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> `test loading state`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> runTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> viewModel \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModel.\u003C/span>\u003Cspan style=\"color:#B392F0\">loadData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        advanceUntilIdle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        assertFalse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(viewModel.isLoading.\u003C/span>\u003Cspan style=\"color:#F97583\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"best-practices\">Best Practices\u003C/h2>\n\u003Ch3 id=\"1-scope-management\">1. Scope Management\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Use viewModelScope for ViewModel\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> loadData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModelScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Automatically cancelled when ViewModel is cleared\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyFragment\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">Fragment\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Use lifecycleScope for Fragment/Activity\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> onViewCreated\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(view: \u003C/span>\u003Cspan style=\"color:#B392F0\">View\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, savedInstanceState: \u003C/span>\u003Cspan style=\"color:#B392F0\">Bundle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">?) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewLifecycleOwner.lifecycleScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            repeatOnLifecycle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Lifecycle.State.STARTED) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">                // Collect flows safely\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                viewModel.uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">collect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-cancellation\">2. Cancellation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> CancellationExample\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> processLargeData\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        coroutineScope\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">forEach\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { item \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">                // Check cancellation regularly\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                ensureActive\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                processItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(item)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-resource-management\">3. Resource Management\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ResourceManager\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> useResource\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> resource \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> acquireResource\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            coroutineScope\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">                // Use resource\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        } \u003C/span>\u003Cspan style=\"color:#F97583\">finally\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Always release, even if cancelled\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            resource.\u003C/span>\u003Cspan style=\"color:#B392F0\">release\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"performance-tips\">Performance Tips\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Use appropriate dispatchers\u003C/strong> - Don’t block Main thread\u003C/li>\n\u003Cli>\u003Cstrong>Avoid GlobalScope\u003C/strong> - Use structured concurrency\u003C/li>\n\u003Cli>\u003Cstrong>Cancel unused coroutines\u003C/strong> - Prevent memory leaks\u003C/li>\n\u003Cli>\u003Cstrong>Use StateFlow for UI state\u003C/strong> - Better than LiveData\u003C/li>\n\u003Cli>\u003Cstrong>Buffer flows when needed\u003C/strong> - Improve performance\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"kết-luận\">Kết luận\u003C/h2>\n\u003Cp>Kotlin Coroutines và Flow provide powerful tools cho async programming. Key takeaways:\u003C/p>\n\u003Cul>\n\u003Cli>Master structured concurrency\u003C/li>\n\u003Cli>Understand dispatchers và contexts\u003C/li>\n\u003Cli>Use Flow cho reactive programming\u003C/li>\n\u003Cli>Always handle exceptions properly\u003C/li>\n\u003Cli>Test thoroughly với proper tools\u003C/li>\n\u003C/ul>\n\u003Cp>Happy coding! 🚀\u003C/p>",{"headings":165,"localImagePaths":239,"remoteImagePaths":240,"frontmatter":241,"imagePaths":244},[166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,229,232,235,238],{"depth":37,"slug":167,"text":168},"overview","Overview",{"depth":37,"slug":170,"text":171},"phần-1-coroutines-fundamentals","Phần 1: Coroutines Fundamentals",{"depth":47,"slug":173,"text":174},"coroutine-builders","Coroutine Builders",{"depth":47,"slug":176,"text":177},"coroutine-context--dispatchers","Coroutine Context & Dispatchers",{"depth":47,"slug":179,"text":180},"structured-concurrency","Structured Concurrency",{"depth":37,"slug":182,"text":183},"phần-2-exception-handling","Phần 2: Exception Handling",{"depth":47,"slug":185,"text":186},"try-catch-vs-coroutineexceptionhandler","Try-Catch vs CoroutineExceptionHandler",{"depth":47,"slug":188,"text":189},"supervisorscope","SupervisorScope",{"depth":37,"slug":191,"text":192},"phần-3-flow---reactive-streams","Phần 3: Flow - Reactive Streams",{"depth":47,"slug":194,"text":195},"creating-flows","Creating Flows",{"depth":47,"slug":197,"text":198},"flow-operators","Flow Operators",{"depth":47,"slug":200,"text":201},"flow-context-preservation","Flow Context Preservation",{"depth":37,"slug":203,"text":204},"phần-4-advanced-patterns","Phần 4: Advanced Patterns",{"depth":47,"slug":206,"text":207},"retry-với-exponential-backoff","Retry với Exponential Backoff",{"depth":47,"slug":209,"text":210},"debounce-search","Debounce Search",{"depth":47,"slug":212,"text":213},"channel-for-actor-pattern","Channel for Actor Pattern",{"depth":37,"slug":215,"text":216},"phần-5-testing-coroutines","Phần 5: Testing Coroutines",{"depth":47,"slug":218,"text":219},"testing-với-runtest","Testing với runTest",{"depth":47,"slug":221,"text":222},"testdispatcher","TestDispatcher",{"depth":37,"slug":224,"text":225},"best-practices","Best Practices",{"depth":47,"slug":227,"text":228},"1-scope-management","1. Scope Management",{"depth":47,"slug":230,"text":231},"2-cancellation","2. Cancellation",{"depth":47,"slug":233,"text":234},"3-resource-management","3. Resource Management",{"depth":37,"slug":236,"text":237},"performance-tips","Performance Tips",{"depth":37,"slug":138,"text":139},[],[],{"title":149,"description":150,"pubDate":242,"author":17,"category":152,"tags":243,"featured":26,"language":27,"readingTime":158},["Date","2024-01-20T00:00:00.000Z"],[22,154,155,20,156,157],[],"multi-module-architecture",{"id":245,"data":247,"body":258,"filePath":259,"digest":260,"rendered":261},{"title":248,"description":249,"pubDate":250,"author":17,"category":251,"tags":252,"draft":25,"featured":25,"language":27,"readingTime":257,"categorySlug":251},"Multi-Module Architecture trong Android - Scale your app đúng cách","Hướng dẫn xây dựng Multi-Module Architecture cho Android apps, từ setup đến best practices",["Date","2024-01-30T00:00:00.000Z"],"case-study",[20,253,254,255,22,256],"architecture","multi-module","gradle","scalability","20 min read","## Why Multi-Module?\n\nKhi app của VietinBank iPay grow từ 50K lines of code lên 500K+, chúng tôi faced với nhiều problems:\n\n- Build time 15+ minutes\n- Merge conflicts liên tục\n- Khó test và maintain\n- Team members step on each other's toes\n\nMulti-module architecture đã giải quyết tất cả những vấn đề này. Let me show you how.\n\n## Module Structure\n\n### Our Module Hierarchy\n\n```\napp/\n├── app/                     # Main application module\n├── core/\n│   ├── core-common/        # Common utilities\n│   ├── core-ui/           # UI components & themes\n│   ├── core-network/      # Network layer\n│   └── core-database/     # Database layer\n├── features/\n│   ├── feature-login/     # Login feature\n│   ├── feature-transfer/  # Transfer feature\n│   ├── feature-payment/   # Payment feature\n│   └── feature-cards/     # Cards management\n├── libraries/\n│   ├── lib-security/     # Security utilities\n│   └── lib-analytics/    # Analytics wrapper\n└── buildSrc/             # Build logic\n```\n\n## Setting Up Modules\n\n### 1. Create Feature Module\n\n```kotlin\n// feature-login/build.gradle.kts\nplugins {\n    id(\"com.android.library\")\n    id(\"kotlin-android\")\n    id(\"kotlin-kapt\")\n    id(\"dagger.hilt.android.plugin\")\n}\n\nandroid {\n    namespace = \"com.mybank.feature.login\"\n    compileSdk = Config.compileSdk\n\n    defaultConfig {\n        minSdk = Config.minSdk\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n}\n\ndependencies {\n    implementation(project(\":core:core-common\"))\n    implementation(project(\":core:core-ui\"))\n    implementation(project(\":core:core-network\"))\n\n    // Feature dependencies\n    implementation(Deps.Compose.ui)\n    implementation(Deps.Hilt.android)\n    kapt(Deps.Hilt.compiler)\n\n    // Testing\n    testImplementation(Deps.Test.junit)\n    androidTestImplementation(Deps.Test.compose)\n}\n```\n\n### 2. Module Communication\n\n#### Using Interfaces\n\n```kotlin\n// core-common/src/main/java/com/mybank/core/navigation/Navigator.kt\ninterface Navigator {\n    fun navigateToLogin()\n    fun navigateToHome()\n    fun navigateToTransfer(accountId: String)\n}\n\n// app/src/main/java/com/mybank/navigation/NavigatorImpl.kt\n@Singleton\nclass NavigatorImpl @Inject constructor(\n    private val navController: NavController\n) : Navigator {\n    override fun navigateToLogin() {\n        navController.navigate(\"login\")\n    }\n\n    override fun navigateToHome() {\n        navController.navigate(\"home\") {\n            popUpTo(\"login\") { inclusive = true }\n        }\n    }\n}\n```\n\n## Dependency Injection với Hilt\n\n### Module Setup\n\n```kotlin\n// feature-login/src/main/java/com/mybank/feature/login/di/LoginModule.kt\n@Module\n@InstallIn(ViewModelComponent::class)\nobject LoginModule {\n\n    @Provides\n    fun provideLoginUseCase(\n        repository: AuthRepository\n    ): LoginUseCase {\n        return LoginUseCase(repository)\n    }\n}\n\n// Core module provides shared dependencies\n@Module\n@InstallIn(SingletonComponent::class)\nobject NetworkModule {\n\n    @Provides\n    @Singleton\n    fun provideRetrofit(): Retrofit {\n        return Retrofit.Builder()\n            .baseUrl(BuildConfig.API_URL)\n            .addConverterFactory(GsonConverterFactory.create())\n            .build()\n    }\n\n    @Provides\n    @Singleton\n    fun provideAuthApi(retrofit: Retrofit): AuthApi {\n        return retrofit.create(AuthApi::class.java)\n    }\n}\n```\n\n## Feature Module Structure\n\n### Clean Architecture in Each Module\n\n```\nfeature-transfer/\n├── src/main/java/com/mybank/feature/transfer/\n│   ├── data/\n│   │   ├── repository/\n│   │   └── datasource/\n│   ├── domain/\n│   │   ├── model/\n│   │   ├── usecase/\n│   │   └── repository/\n│   ├── presentation/\n│   │   ├── screen/\n│   │   ├── viewmodel/\n│   │   └── components/\n│   └── di/\n│       └── TransferModule.kt\n```\n\n### Example Feature Implementation\n\n```kotlin\n// Domain Layer\ndata class TransferRequest(\n    val fromAccount: String,\n    val toAccount: String,\n    val amount: BigDecimal,\n    val note: String? = null\n)\n\ninterface TransferRepository {\n    suspend fun transfer(request: TransferRequest): Result\u003CTransferResponse>\n    suspend fun getAccounts(): Result\u003CList\u003CAccount>>\n}\n\nclass TransferUseCase @Inject constructor(\n    private val repository: TransferRepository\n) {\n    suspend operator fun invoke(request: TransferRequest): Result\u003CTransferResponse> {\n        // Business logic validation\n        if (request.amount \u003C= BigDecimal.ZERO) {\n            return Result.failure(InvalidAmountException())\n        }\n        return repository.transfer(request)\n    }\n}\n\n// Presentation Layer\n@HiltViewModel\nclass TransferViewModel @Inject constructor(\n    private val transferUseCase: TransferUseCase,\n    private val savedStateHandle: SavedStateHandle\n) : ViewModel() {\n\n    private val _uiState = MutableStateFlow(TransferUiState())\n    val uiState = _uiState.asStateFlow()\n\n    fun transfer(request: TransferRequest) {\n        viewModelScope.launch {\n            _uiState.update { it.copy(isLoading = true) }\n\n            transferUseCase(request)\n                .onSuccess { response ->\n                    _uiState.update {\n                        it.copy(\n                            isLoading = false,\n                            isSuccess = true,\n                            transactionId = response.transactionId\n                        )\n                    }\n                }\n                .onFailure { error ->\n                    _uiState.update {\n                        it.copy(\n                            isLoading = false,\n                            error = error.message\n                        )\n                    }\n                }\n        }\n    }\n}\n```\n\n## Build Configuration\n\n### Version Catalog (libs.versions.toml)\n\n```toml\n[versions]\ncompose = \"1.5.4\"\nhilt = \"2.48\"\nretrofit = \"2.9.0\"\nroom = \"2.6.0\"\n\n[libraries]\ncompose-ui = { module = \"androidx.compose.ui:ui\", version.ref = \"compose\" }\nhilt-android = { module = \"com.google.dagger:hilt-android\", version.ref = \"hilt\" }\nretrofit = { module = \"com.squareup.retrofit2:retrofit\", version.ref = \"retrofit\" }\nroom-runtime = { module = \"androidx.room:room-runtime\", version.ref = \"room\" }\n\n[bundles]\ncompose = [\"compose-ui\", \"compose-material3\", \"compose-tooling\"]\n```\n\n### BuildSrc for Shared Configuration\n\n```kotlin\n// buildSrc/src/main/kotlin/Config.kt\nobject Config {\n    const val compileSdk = 34\n    const val minSdk = 24\n    const val targetSdk = 34\n    const val versionCode = 1\n    const val versionName = \"1.0.0\"\n}\n\n// buildSrc/src/main/kotlin/android-library.gradle.kts\nplugins {\n    id(\"com.android.library\")\n    id(\"kotlin-android\")\n}\n\nandroid {\n    compileSdk = Config.compileSdk\n\n    defaultConfig {\n        minSdk = Config.minSdk\n    }\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n}\n```\n\n## Testing Strategy\n\n### Module Testing\n\n```kotlin\n// feature-transfer/src/test/java/TransferUseCaseTest.kt\nclass TransferUseCaseTest {\n\n    @Mock\n    private lateinit var repository: TransferRepository\n\n    private lateinit var useCase: TransferUseCase\n\n    @Before\n    fun setup() {\n        MockitoAnnotations.openMocks(this)\n        useCase = TransferUseCase(repository)\n    }\n\n    @Test\n    fun `transfer with zero amount should return error`() = runTest {\n        val request = TransferRequest(\n            fromAccount = \"123\",\n            toAccount = \"456\",\n            amount = BigDecimal.ZERO\n        )\n\n        val result = useCase(request)\n\n        assertTrue(result.isFailure)\n        assertTrue(result.exceptionOrNull() is InvalidAmountException)\n    }\n}\n```\n\n## Benefits We Achieved\n\n### 1. Build Time Improvement\n\n```\nBefore: 15+ minutes full build\nAfter:  2-3 minutes (only changed modules)\n        30 seconds (single feature module)\n```\n\n### 2. Team Productivity\n\n- Parallel development on different features\n- Less merge conflicts\n- Clear code ownership\n- Easier onboarding\n\n### 3. Better Testing\n\n- Isolated unit tests per module\n- Faster test execution\n- Better test coverage\n\n### 4. Reusability\n\n```kotlin\n// Share UI components across features\n// core-ui/src/main/java/com/mybank/core/ui/components/\n@Composable\nfun BankButton(\n    text: String,\n    onClick: () -> Unit,\n    modifier: Modifier = Modifier,\n    enabled: Boolean = true\n) {\n    Button(\n        onClick = onClick,\n        modifier = modifier,\n        enabled = enabled,\n        colors = ButtonDefaults.buttonColors(\n            containerColor = BankTheme.colors.primary\n        )\n    ) {\n        Text(text)\n    }\n}\n```\n\n## Common Pitfalls & Solutions\n\n### 1. Circular Dependencies\n\n```kotlin\n// ❌ Bad - Circular dependency\n// feature-a depends on feature-b\n// feature-b depends on feature-a\n\n// ✅ Good - Use abstraction\n// Both features depend on core-common interface\ninterface FeatureNavigator {\n    fun navigateToFeatureA()\n    fun navigateToFeatureB()\n}\n```\n\n### 2. Module Granularity\n\n```kotlin\n// ❌ Too fine-grained\n:feature-login-ui\n:feature-login-domain\n:feature-login-data\n\n// ✅ Better - Feature contains all layers\n:feature-login (contains ui, domain, data)\n```\n\n### 3. Resource Conflicts\n\n```xml\n\u003C!-- ❌ Bad - Generic names cause conflicts -->\n\u003Cstring name=\"title\">Title\u003C/string>\n\n\u003C!-- ✅ Good - Prefixed names -->\n\u003Cstring name=\"transfer_title\">Transfer Money\u003C/string>\n```\n\n## Migration Strategy\n\n### Phase 1: Extract Core Modules\n\n1. Create core-common, core-ui, core-network\n2. Move shared code\n3. Update dependencies\n\n### Phase 2: Feature by Feature\n\n1. Identify feature boundaries\n2. Create feature module\n3. Move code incrementally\n4. Update navigation\n\n### Phase 3: Optimize\n\n1. Analyze build performance\n2. Optimize module dependencies\n3. Enable parallel builds\n\n## Performance Metrics\n\n```kotlin\n// Enable build performance tracking\n// gradle.properties\norg.gradle.parallel=true\norg.gradle.caching=true\norg.gradle.configureondemand=true\n\n// Track build times\n./gradlew build --profile\n```\n\n## Conclusion\n\nMulti-module architecture transformed our development process:\n\n- **80% faster** incremental builds\n- **50% reduction** in merge conflicts\n- **Better** code quality and maintainability\n- **Happier** development team\n\nStart small, extract gradually, and enjoy the benefits! 🚀\n\nQuestions? Reach out on [LinkedIn](https://linkedin.com/in/khoivan) or comment below!","src/content/blog/multi-module-architecture.md","0c647afe8f5df863",{"html":262,"metadata":263},"\u003Ch2 id=\"why-multi-module\">Why Multi-Module?\u003C/h2>\n\u003Cp>Khi app của VietinBank iPay grow từ 50K lines of code lên 500K+, chúng tôi faced với nhiều problems:\u003C/p>\n\u003Cul>\n\u003Cli>Build time 15+ minutes\u003C/li>\n\u003Cli>Merge conflicts liên tục\u003C/li>\n\u003Cli>Khó test và maintain\u003C/li>\n\u003Cli>Team members step on each other’s toes\u003C/li>\n\u003C/ul>\n\u003Cp>Multi-module architecture đã giải quyết tất cả những vấn đề này. Let me show you how.\u003C/p>\n\u003Ch2 id=\"module-structure\">Module Structure\u003C/h2>\n\u003Ch3 id=\"our-module-hierarchy\">Our Module Hierarchy\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>app/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── app/                     # Main application module\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── core/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── core-common/        # Common utilities\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── core-ui/           # UI components &#x26; themes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── core-network/      # Network layer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   └── core-database/     # Database layer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── features/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── feature-login/     # Login feature\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── feature-transfer/  # Transfer feature\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── feature-payment/   # Payment feature\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   └── feature-cards/     # Cards management\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── libraries/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── lib-security/     # Security utilities\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   └── lib-analytics/    # Analytics wrapper\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>└── buildSrc/             # Build logic\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"setting-up-modules\">Setting Up Modules\u003C/h2>\n\u003Ch3 id=\"1-create-feature-module\">1. Create Feature Module\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// feature-login/build.gradle.kts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">plugins\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.android.library\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"kotlin-android\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"kotlin-kapt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"dagger.hilt.android.plugin\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">android\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    namespace \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"com.mybank.feature.login\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    compileSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Config.compileSdk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    defaultConfig\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        minSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Config.minSdk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        testInstrumentationRunner \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"androidx.test.runner.AndroidJUnitRunner\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">dependencies\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    implementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">project\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\":core:core-common\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    implementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">project\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\":core:core-ui\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    implementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">project\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\":core:core-network\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Feature dependencies\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    implementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Deps.Compose.ui)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    implementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Deps.Hilt.android)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    kapt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Deps.Hilt.compiler)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Testing\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    testImplementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Deps.Test.junit)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    androidTestImplementation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Deps.Test.compose)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-module-communication\">2. Module Communication\u003C/h3>\n\u003Ch4 id=\"using-interfaces\">Using Interfaces\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// core-common/src/main/java/com/mybank/core/navigation/Navigator.kt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> Navigator\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToLogin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToHome\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToTransfer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(accountId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// app/src/main/java/com/mybank/navigation/NavigatorImpl.kt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Singleton\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> NavigatorImpl\u003C/span>\u003Cspan style=\"color:#B392F0\"> @Inject\u003C/span>\u003Cspan style=\"color:#B392F0\"> constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> navController: \u003C/span>\u003Cspan style=\"color:#B392F0\">NavController\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) : \u003C/span>\u003Cspan style=\"color:#B392F0\">Navigator\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToLogin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        navController.\u003C/span>\u003Cspan style=\"color:#B392F0\">navigate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"login\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToHome\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        navController.\u003C/span>\u003Cspan style=\"color:#B392F0\">navigate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"home\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            popUpTo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"login\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) { inclusive \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"dependency-injection-với-hilt\">Dependency Injection với Hilt\u003C/h2>\n\u003Ch3 id=\"module-setup\">Module Setup\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// feature-login/src/main/java/com/mybank/feature/login/di/LoginModule.kt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Module\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@InstallIn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(ViewModelComponent::\u003C/span>\u003Cspan style=\"color:#B392F0\">class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">object\u003C/span>\u003Cspan style=\"color:#B392F0\"> LoginModule\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Provides\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> provideLoginUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        repository: \u003C/span>\u003Cspan style=\"color:#B392F0\">AuthRepository\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ): \u003C/span>\u003Cspan style=\"color:#B392F0\">LoginUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#B392F0\"> LoginUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(repository)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Core module provides shared dependencies\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Module\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@InstallIn\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(SingletonComponent::\u003C/span>\u003Cspan style=\"color:#B392F0\">class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">object\u003C/span>\u003Cspan style=\"color:#B392F0\"> NetworkModule\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Provides\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Singleton\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> provideRetrofit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Retrofit\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Retrofit.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">baseUrl\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(BuildConfig.API_URL)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">addConverterFactory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(GsonConverterFactory.\u003C/span>\u003Cspan style=\"color:#B392F0\">create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Provides\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Singleton\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> provideAuthApi\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(retrofit: \u003C/span>\u003Cspan style=\"color:#B392F0\">Retrofit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">AuthApi\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> retrofit.\u003C/span>\u003Cspan style=\"color:#B392F0\">create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(AuthApi::\u003C/span>\u003Cspan style=\"color:#B392F0\">class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.java)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"feature-module-structure\">Feature Module Structure\u003C/h2>\n\u003Ch3 id=\"clean-architecture-in-each-module\">Clean Architecture in Each Module\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>feature-transfer/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── src/main/java/com/mybank/feature/transfer/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── data/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── repository/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   └── datasource/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── domain/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── model/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── usecase/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   └── repository/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── presentation/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── screen/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── viewmodel/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   └── components/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   └── di/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│       └── TransferModule.kt\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"example-feature-implementation\">Example Feature Implementation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Domain Layer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> fromAccount: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> toAccount: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> amount: \u003C/span>\u003Cspan style=\"color:#B392F0\">BigDecimal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> note: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">? \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> null\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferRepository\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> transfer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">Result\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">TransferResponse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> getAccounts\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Result\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Account\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferUseCase\u003C/span>\u003Cspan style=\"color:#B392F0\"> @Inject\u003C/span>\u003Cspan style=\"color:#B392F0\"> constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferRepository\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> operator\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> invoke\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">Result\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">TransferResponse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Business logic validation\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (request.amount \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> BigDecimal.ZERO) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Result.\u003C/span>\u003Cspan style=\"color:#B392F0\">failure\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">InvalidAmountException\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository.\u003C/span>\u003Cspan style=\"color:#B392F0\">transfer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Presentation Layer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@HiltViewModel\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferViewModel\u003C/span>\u003Cspan style=\"color:#B392F0\"> @Inject\u003C/span>\u003Cspan style=\"color:#B392F0\"> constructor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> transferUseCase: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> savedStateHandle: \u003C/span>\u003Cspan style=\"color:#B392F0\">SavedStateHandle\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _uiState \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">TransferUiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> uiState \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">asStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> transfer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        viewModelScope.\u003C/span>\u003Cspan style=\"color:#B392F0\">launch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            _uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.\u003C/span>\u003Cspan style=\"color:#B392F0\">copy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(isLoading \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            transferUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                .\u003C/span>\u003Cspan style=\"color:#B392F0\">onSuccess\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { response \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    _uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        it.\u003C/span>\u003Cspan style=\"color:#B392F0\">copy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            isLoading \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            isSuccess \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            transactionId \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> response.transactionId\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                .\u003C/span>\u003Cspan style=\"color:#B392F0\">onFailure\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { error \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    _uiState.\u003C/span>\u003Cspan style=\"color:#B392F0\">update\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        it.\u003C/span>\u003Cspan style=\"color:#B392F0\">copy\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            isLoading \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            error \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> error.message\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"build-configuration\">Build Configuration\u003C/h2>\n\u003Ch3 id=\"version-catalog-libsversionstoml\">Version Catalog (libs.versions.toml)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"toml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">versions\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">compose = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"1.5.4\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">hilt = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"2.48\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">retrofit = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"2.9.0\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">room = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"2.6.0\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">libraries\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">compose-ui = { module = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"androidx.compose.ui:ui\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, version.ref = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"compose\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">hilt-android = { module = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.google.dagger:hilt-android\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, version.ref = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hilt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">retrofit = { module = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.squareup.retrofit2:retrofit\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, version.ref = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"retrofit\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">room-runtime = { module = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"androidx.room:room-runtime\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, version.ref = \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"room\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#B392F0\">bundles\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">compose = [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"compose-ui\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"compose-material3\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"compose-tooling\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"buildsrc-for-shared-configuration\">BuildSrc for Shared Configuration\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// buildSrc/src/main/kotlin/Config.kt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">object\u003C/span>\u003Cspan style=\"color:#B392F0\"> Config\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> compileSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 34\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> minSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 24\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> targetSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 34\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> versionCode \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> versionName \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1.0.0\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// buildSrc/src/main/kotlin/android-library.gradle.kts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">plugins\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.android.library\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    id\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"kotlin-android\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">android\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    compileSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Config.compileSdk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    defaultConfig\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        minSdk \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Config.minSdk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    compileOptions\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        sourceCompatibility \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> JavaVersion.VERSION_17\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        targetCompatibility \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> JavaVersion.VERSION_17\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"testing-strategy\">Testing Strategy\u003C/h2>\n\u003Ch3 id=\"module-testing\">Module Testing\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// feature-transfer/src/test/java/TransferUseCaseTest.kt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferUseCaseTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Mock\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> lateinit\u003C/span>\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> repository: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferRepository\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> lateinit\u003C/span>\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> useCase: \u003C/span>\u003Cspan style=\"color:#B392F0\">TransferUseCase\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Before\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> setup\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        MockitoAnnotations.\u003C/span>\u003Cspan style=\"color:#B392F0\">openMocks\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        useCase \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(repository)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    @Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> `transfer with zero amount should return error`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> runTest\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> request \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> TransferRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            fromAccount \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"123\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            toAccount \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"456\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            amount \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> BigDecimal.ZERO\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(request)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        assertTrue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result.isFailure)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        assertTrue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result.\u003C/span>\u003Cspan style=\"color:#B392F0\">exceptionOrNull\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">is\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> InvalidAmountException)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"benefits-we-achieved\">Benefits We Achieved\u003C/h2>\n\u003Ch3 id=\"1-build-time-improvement\">1. Build Time Improvement\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Before: 15+ minutes full build\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>After:  2-3 minutes (only changed modules)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        30 seconds (single feature module)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-team-productivity\">2. Team Productivity\u003C/h3>\n\u003Cul>\n\u003Cli>Parallel development on different features\u003C/li>\n\u003Cli>Less merge conflicts\u003C/li>\n\u003Cli>Clear code ownership\u003C/li>\n\u003Cli>Easier onboarding\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"3-better-testing\">3. Better Testing\u003C/h3>\n\u003Cul>\n\u003Cli>Isolated unit tests per module\u003C/li>\n\u003Cli>Faster test execution\u003C/li>\n\u003Cli>Better test coverage\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"4-reusability\">4. Reusability\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Share UI components across features\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// core-ui/src/main/java/com/mybank/core/ui/components/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> BankButton\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    text: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    onClick: () \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Unit,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    modifier: \u003C/span>\u003Cspan style=\"color:#B392F0\">Modifier\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Modifier,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    enabled: \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        onClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> onClick,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> modifier,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        enabled \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> enabled,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        colors \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ButtonDefaults.\u003C/span>\u003Cspan style=\"color:#B392F0\">buttonColors\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            containerColor \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> BankTheme.colors.primary\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(text)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"common-pitfalls--solutions\">Common Pitfalls &#x26; Solutions\u003C/h2>\n\u003Ch3 id=\"1-circular-dependencies\">1. Circular Dependencies\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ❌ Bad - Circular dependency\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// feature-a depends on feature-b\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// feature-b depends on feature-a\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ✅ Good - Use abstraction\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Both features depend on core-common interface\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> FeatureNavigator\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToFeatureA\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> navigateToFeatureB\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-module-granularity\">2. Module Granularity\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ❌ Too fine-grained\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#B392F0\">feature\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">login\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">ui\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#B392F0\">feature\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">login\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">domain\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#B392F0\">feature\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">login\u003C/span>\u003Cspan style=\"color:#F97583\">-data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ✅ Better - Feature contains all layers\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#B392F0\">feature\u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#B392F0\">login\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (contains ui, domain, \u003C/span>\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"3-resource-conflicts\">3. Resource Conflicts\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"xml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- ❌ Bad - Generic names cause conflicts -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">string\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Title&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- ✅ Good - Prefixed names -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">string\u003C/span>\u003Cspan style=\"color:#B392F0\"> name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"transfer_title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Transfer Money&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"migration-strategy\">Migration Strategy\u003C/h2>\n\u003Ch3 id=\"phase-1-extract-core-modules\">Phase 1: Extract Core Modules\u003C/h3>\n\u003Col>\n\u003Cli>Create core-common, core-ui, core-network\u003C/li>\n\u003Cli>Move shared code\u003C/li>\n\u003Cli>Update dependencies\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"phase-2-feature-by-feature\">Phase 2: Feature by Feature\u003C/h3>\n\u003Col>\n\u003Cli>Identify feature boundaries\u003C/li>\n\u003Cli>Create feature module\u003C/li>\n\u003Cli>Move code incrementally\u003C/li>\n\u003Cli>Update navigation\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"phase-3-optimize\">Phase 3: Optimize\u003C/h3>\n\u003Col>\n\u003Cli>Analyze build performance\u003C/li>\n\u003Cli>Optimize module dependencies\u003C/li>\n\u003Cli>Enable parallel builds\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"performance-metrics\">Performance Metrics\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Enable build performance tracking\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// gradle.properties\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">org.gradle.parallel\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">org.gradle.caching\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">org.gradle.configureondemand\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Track build times\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\">gradlew build \u003C/span>\u003Cspan style=\"color:#F97583\">--\u003C/span>\u003Cspan style=\"color:#E1E4E8\">profile\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Multi-module architecture transformed our development process:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>80% faster\u003C/strong> incremental builds\u003C/li>\n\u003Cli>\u003Cstrong>50% reduction\u003C/strong> in merge conflicts\u003C/li>\n\u003Cli>\u003Cstrong>Better\u003C/strong> code quality and maintainability\u003C/li>\n\u003Cli>\u003Cstrong>Happier\u003C/strong> development team\u003C/li>\n\u003C/ul>\n\u003Cp>Start small, extract gradually, and enjoy the benefits! 🚀\u003C/p>\n\u003Cp>Questions? Reach out on \u003Ca href=\"https://linkedin.com/in/khoivan\">LinkedIn\u003C/a> or comment below!\u003C/p>",{"headings":264,"localImagePaths":362,"remoteImagePaths":363,"frontmatter":364,"imagePaths":367},[265,268,271,274,277,280,283,287,290,293,296,299,302,305,308,311,314,317,320,323,326,329,332,335,338,341,344,347,350,353,356,359],{"depth":37,"slug":266,"text":267},"why-multi-module","Why Multi-Module?",{"depth":37,"slug":269,"text":270},"module-structure","Module Structure",{"depth":47,"slug":272,"text":273},"our-module-hierarchy","Our Module Hierarchy",{"depth":37,"slug":275,"text":276},"setting-up-modules","Setting Up Modules",{"depth":47,"slug":278,"text":279},"1-create-feature-module","1. Create Feature Module",{"depth":47,"slug":281,"text":282},"2-module-communication","2. Module Communication",{"depth":284,"slug":285,"text":286},4,"using-interfaces","Using Interfaces",{"depth":37,"slug":288,"text":289},"dependency-injection-với-hilt","Dependency Injection với Hilt",{"depth":47,"slug":291,"text":292},"module-setup","Module Setup",{"depth":37,"slug":294,"text":295},"feature-module-structure","Feature Module Structure",{"depth":47,"slug":297,"text":298},"clean-architecture-in-each-module","Clean Architecture in Each Module",{"depth":47,"slug":300,"text":301},"example-feature-implementation","Example Feature Implementation",{"depth":37,"slug":303,"text":304},"build-configuration","Build Configuration",{"depth":47,"slug":306,"text":307},"version-catalog-libsversionstoml","Version Catalog (libs.versions.toml)",{"depth":47,"slug":309,"text":310},"buildsrc-for-shared-configuration","BuildSrc for Shared Configuration",{"depth":37,"slug":312,"text":313},"testing-strategy","Testing Strategy",{"depth":47,"slug":315,"text":316},"module-testing","Module Testing",{"depth":37,"slug":318,"text":319},"benefits-we-achieved","Benefits We Achieved",{"depth":47,"slug":321,"text":322},"1-build-time-improvement","1. Build Time Improvement",{"depth":47,"slug":324,"text":325},"2-team-productivity","2. Team Productivity",{"depth":47,"slug":327,"text":328},"3-better-testing","3. Better Testing",{"depth":47,"slug":330,"text":331},"4-reusability","4. Reusability",{"depth":37,"slug":333,"text":334},"common-pitfalls--solutions","Common Pitfalls & Solutions",{"depth":47,"slug":336,"text":337},"1-circular-dependencies","1. Circular Dependencies",{"depth":47,"slug":339,"text":340},"2-module-granularity","2. Module Granularity",{"depth":47,"slug":342,"text":343},"3-resource-conflicts","3. Resource Conflicts",{"depth":37,"slug":345,"text":346},"migration-strategy","Migration Strategy",{"depth":47,"slug":348,"text":349},"phase-1-extract-core-modules","Phase 1: Extract Core Modules",{"depth":47,"slug":351,"text":352},"phase-2-feature-by-feature","Phase 2: Feature by Feature",{"depth":47,"slug":354,"text":355},"phase-3-optimize","Phase 3: Optimize",{"depth":37,"slug":357,"text":358},"performance-metrics","Performance Metrics",{"depth":37,"slug":360,"text":361},"conclusion","Conclusion",[],[],{"title":248,"description":249,"pubDate":365,"author":17,"category":251,"tags":366,"featured":25,"language":27,"readingTime":257},["Date","2024-01-30T00:00:00.000Z"],[20,253,254,255,22,256],[],"android-security-best-practices",{"id":368,"data":370,"body":380,"filePath":381,"digest":382,"rendered":383},{"title":371,"description":372,"pubDate":373,"author":17,"category":152,"tags":374,"draft":25,"featured":25,"language":27,"readingTime":28,"categorySlug":152},"Android Security Best Practices cho Banking Apps","Hướng dẫn chi tiết về security trong Android apps, đặc biệt cho Banking và Fintech applications",["Date","2024-01-25T00:00:00.000Z"],[20,375,376,377,378,379],"security","banking","encryption","biometric","fintech","## Introduction\n\nSau 4 năm làm việc với banking apps tại VietinBank, tôi đã học được rất nhiều về mobile security. Banking apps là target của hackers, nên security phải là top priority. Bài viết này tổng hợp các best practices tôi đã áp dụng.\n\n## 1. Data Encryption\n\n### Encrypt Sensitive Data\n\n```kotlin\nclass EncryptionManager {\n    private val masterKey = MasterKey.Builder(context)\n        .setKeyScheme(MasterKey.KeyScheme.AES256_GCM)\n        .build()\n\n    private val encryptedPrefs = EncryptedSharedPreferences.create(\n        context,\n        \"secure_prefs\",\n        masterKey,\n        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\n        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\n    )\n\n    fun saveToken(token: String) {\n        encryptedPrefs.edit()\n            .putString(\"auth_token\", token)\n            .apply()\n    }\n}\n```\n\n### Database Encryption với SQLCipher\n\n```kotlin\nclass SecureDatabase {\n    fun getDatabase(context: Context): SupportSQLiteOpenHelper {\n        val passphrase = SQLCipherUtils.getPassphrase()\n        val factory = SupportFactory(passphrase)\n\n        return Room.databaseBuilder(\n            context,\n            AppDatabase::class.java,\n            \"secure_db\"\n        )\n        .openHelperFactory(factory)\n        .build()\n    }\n}\n```\n\n## 2. Network Security\n\n### Certificate Pinning\n\n```kotlin\nclass NetworkModule {\n    fun provideOkHttpClient(): OkHttpClient {\n        val certificatePinner = CertificatePinner.Builder()\n            .add(\n                \"api.mybank.com\",\n                \"sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\"\n            )\n            .build()\n\n        return OkHttpClient.Builder()\n            .certificatePinner(certificatePinner)\n            .build()\n    }\n}\n```\n\n### Network Security Config\n\n```xml\n\u003C!-- res/xml/network_security_config.xml -->\n\u003Cnetwork-security-config>\n    \u003Cdomain-config cleartextTrafficPermitted=\"false\">\n        \u003Cdomain includeSubdomains=\"true\">mybank.com\u003C/domain>\n        \u003Cpin-set expiration=\"2025-01-01\">\n            \u003Cpin digest=\"SHA-256\">base64hash=\u003C/pin>\n            \u003Cpin digest=\"SHA-256\">base64backup=\u003C/pin>\n        \u003C/pin-set>\n    \u003C/domain-config>\n\u003C/network-security-config>\n```\n\n## 3. Authentication & Biometrics\n\n### Biometric Authentication\n\n```kotlin\nclass BiometricManager(private val context: Context) {\n    private val executor = ContextCompat.getMainExecutor(context)\n    private val biometricPrompt = BiometricPrompt(\n        context as FragmentActivity,\n        executor,\n        authenticationCallback\n    )\n\n    fun authenticate() {\n        val promptInfo = BiometricPrompt.PromptInfo.Builder()\n            .setTitle(\"Xác thực sinh trắc học\")\n            .setSubtitle(\"Sử dụng vân tay hoặc Face ID\")\n            .setNegativeButtonText(\"Hủy\")\n            .setAllowedAuthenticators(\n                BiometricManager.Authenticators.BIOMETRIC_STRONG\n            )\n            .build()\n\n        biometricPrompt.authenticate(promptInfo)\n    }\n\n    private val authenticationCallback = object : BiometricPrompt.AuthenticationCallback() {\n        override fun onAuthenticationSucceeded(result: BiometricPrompt.AuthenticationResult) {\n            // Handle success\n            val cipher = result.cryptoObject?.cipher\n            // Use cipher to decrypt sensitive data\n        }\n    }\n}\n```\n\n### Cryptographic Operations với Biometric\n\n```kotlin\nclass CryptoManager {\n    private val keyAlias = \"BiometricKeyAlias\"\n\n    fun generateSecretKey() {\n        val keyGenParameterSpec = KeyGenParameterSpec.Builder(\n            keyAlias,\n            KeyProperties.PURPOSE_ENCRYPT or KeyProperties.PURPOSE_DECRYPT\n        )\n        .setBlockModes(KeyProperties.BLOCK_MODE_CBC)\n        .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_PKCS7)\n        .setUserAuthenticationRequired(true)\n        .setUserAuthenticationParameters(\n            30, // Timeout in seconds\n            KeyProperties.AUTH_BIOMETRIC_STRONG\n        )\n        .build()\n\n        val keyGenerator = KeyGenerator.getInstance(\n            KeyProperties.KEY_ALGORITHM_AES,\n            \"AndroidKeyStore\"\n        )\n        keyGenerator.init(keyGenParameterSpec)\n        keyGenerator.generateKey()\n    }\n}\n```\n\n## 4. Code Obfuscation & Protection\n\n### ProGuard/R8 Configuration\n\n```proguard\n# Obfuscate code\n-obfuscationdictionary proguard-dict.txt\n-classobfuscationdictionary proguard-dict.txt\n-packageobfuscationdictionary proguard-dict.txt\n\n# Keep security-critical classes\n-keep class com.mybank.security.** { *; }\n\n# Remove logging in release\n-assumenosideeffects class android.util.Log {\n    public static *** d(...);\n    public static *** v(...);\n    public static *** i(...);\n}\n```\n\n### Anti-Tampering\n\n```kotlin\nclass IntegrityChecker {\n    fun verifyAppSignature(context: Context): Boolean {\n        val packageInfo = context.packageManager\n            .getPackageInfo(context.packageName, PackageManager.GET_SIGNATURES)\n\n        val signatures = packageInfo.signatures\n        val expectedSignature = \"YOUR_RELEASE_SIGNATURE_HASH\"\n\n        for (signature in signatures) {\n            val hash = MessageDigest.getInstance(\"SHA-256\")\n                .digest(signature.toByteArray())\n                .toHexString()\n\n            if (hash == expectedSignature) {\n                return true\n            }\n        }\n        return false\n    }\n\n    fun detectRootedDevice(): Boolean {\n        val rootIndicators = listOf(\n            \"/system/app/Superuser.apk\",\n            \"/sbin/su\",\n            \"/system/bin/su\",\n            \"/system/xbin/su\"\n        )\n\n        return rootIndicators.any { File(it).exists() }\n    }\n}\n```\n\n## 5. Secure Communication\n\n### End-to-End Encryption\n\n```kotlin\nclass E2EEncryption {\n    fun encryptMessage(message: String, publicKey: PublicKey): String {\n        val cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\")\n        cipher.init(Cipher.ENCRYPT_MODE, publicKey)\n\n        val encrypted = cipher.doFinal(message.toByteArray())\n        return Base64.encodeToString(encrypted, Base64.DEFAULT)\n    }\n\n    fun decryptMessage(encrypted: String, privateKey: PrivateKey): String {\n        val cipher = Cipher.getInstance(\"RSA/ECB/PKCS1Padding\")\n        cipher.init(Cipher.DECRYPT_MODE, privateKey)\n\n        val decoded = Base64.decode(encrypted, Base64.DEFAULT)\n        val decrypted = cipher.doFinal(decoded)\n        return String(decrypted)\n    }\n}\n```\n\n## 6. Session Management\n\n### Secure Session Handling\n\n```kotlin\nclass SessionManager {\n    private var sessionTimeout = 5 * 60 * 1000L // 5 minutes\n    private var lastActivityTime = System.currentTimeMillis()\n\n    fun checkSession(): Boolean {\n        val currentTime = System.currentTimeMillis()\n        if (currentTime - lastActivityTime > sessionTimeout) {\n            logout()\n            return false\n        }\n        updateActivityTime()\n        return true\n    }\n\n    fun updateActivityTime() {\n        lastActivityTime = System.currentTimeMillis()\n    }\n\n    fun logout() {\n        // Clear all sensitive data\n        clearTokens()\n        clearCache()\n        navigateToLogin()\n    }\n}\n```\n\n## 7. Input Validation\n\n### Prevent SQL Injection\n\n```kotlin\nclass UserRepository {\n    // ❌ Bad - Vulnerable to SQL injection\n    fun getUserBad(username: String): User? {\n        val query = \"SELECT * FROM users WHERE username = '$username'\"\n        return database.rawQuery(query, null)\n    }\n\n    // ✅ Good - Parameterized query\n    fun getUserGood(username: String): User? {\n        val query = \"SELECT * FROM users WHERE username = ?\"\n        return database.rawQuery(query, arrayOf(username))\n    }\n}\n```\n\n### Input Sanitization\n\n```kotlin\nclass InputValidator {\n    fun validateEmail(email: String): Boolean {\n        val pattern = Patterns.EMAIL_ADDRESS\n        return pattern.matcher(email).matches()\n    }\n\n    fun sanitizeInput(input: String): String {\n        return input\n            .replace(\"\u003C\", \"&lt;\")\n            .replace(\">\", \"&gt;\")\n            .replace(\"\\\"\", \"&quot;\")\n            .replace(\"'\", \"&#x27;\")\n            .replace(\"/\", \"&#x2F;\")\n    }\n}\n```\n\n## 8. Logging & Error Handling\n\n### Secure Logging\n\n```kotlin\nclass SecureLogger {\n    fun log(message: String) {\n        if (BuildConfig.DEBUG) {\n            Log.d(TAG, sanitizeLog(message))\n        }\n    }\n\n    private fun sanitizeLog(message: String): String {\n        // Remove sensitive data patterns\n        return message\n            .replace(Regex(\"\\\\b\\\\d{16}\\\\b\"), \"****\") // Credit card\n            .replace(Regex(\"\\\\b\\\\d{9,10}\\\\b\"), \"****\") // Phone number\n            .replace(Regex(\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}\"), \"****@****\")\n    }\n}\n```\n\n## 9. WebView Security\n\n```kotlin\nclass SecureWebView {\n    fun configureWebView(webView: WebView) {\n        webView.settings.apply {\n            javaScriptEnabled = false // Enable only if needed\n            allowFileAccess = false\n            allowContentAccess = false\n            savePassword = false\n            saveFormData = false\n        }\n\n        // Validate URLs before loading\n        webView.webViewClient = object : WebViewClient() {\n            override fun shouldOverrideUrlLoading(view: WebView?, request: WebResourceRequest?): Boolean {\n                val url = request?.url?.toString() ?: return false\n                return if (isUrlSafe(url)) {\n                    false // Load the URL\n                } else {\n                    true // Block the URL\n                }\n            }\n        }\n    }\n}\n```\n\n## 10. Security Checklist\n\n### Pre-release Security Audit\n\n- [ ] All sensitive data encrypted\n- [ ] Certificate pinning implemented\n- [ ] ProGuard/R8 enabled\n- [ ] No hardcoded secrets\n- [ ] Root detection active\n- [ ] Anti-tampering measures\n- [ ] Secure session management\n- [ ] Input validation on all forms\n- [ ] No sensitive data in logs\n- [ ] WebView properly configured\n- [ ] Biometric authentication for sensitive operations\n- [ ] Network security config properly set\n\n## Tools for Security Testing\n\n1. **MobSF** - Mobile Security Framework\n2. **QARK** - Quick Android Review Kit\n3. **Drozer** - Security testing framework\n4. **Android Studio Lint** - Built-in security checks\n5. **Frida** - Dynamic instrumentation\n\n## Conclusion\n\nSecurity trong banking apps không phải optional - it's mandatory. Implement càng nhiều layers càng tốt (defense in depth). Remember: security is not a feature, it's a process.\n\nStay secure! 🔐","src/content/blog/android-security-best-practices.md","945c8f18c98c17a9",{"html":384,"metadata":385},"\u003Ch2 id=\"introduction\">Introduction\u003C/h2>\n\u003Cp>Sau 4 năm làm việc với banking apps tại VietinBank, tôi đã học được rất nhiều về mobile security. Banking apps là target của hackers, nên security phải là top priority. Bài viết này tổng hợp các best practices tôi đã áp dụng.\u003C/p>\n\u003Ch2 id=\"1-data-encryption\">1. Data Encryption\u003C/h2>\n\u003Ch3 id=\"encrypt-sensitive-data\">Encrypt Sensitive Data\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> EncryptionManager\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> masterKey \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> MasterKey.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">setKeyScheme\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(MasterKey.KeyScheme.AES256_GCM)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> encryptedPrefs \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> EncryptedSharedPreferences.\u003C/span>\u003Cspan style=\"color:#B392F0\">create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        context,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">        \"secure_prefs\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        masterKey,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> saveToken\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(token: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        encryptedPrefs.\u003C/span>\u003Cspan style=\"color:#B392F0\">edit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">putString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"auth_token\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, token)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">apply\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"database-encryption-với-sqlcipher\">Database Encryption với SQLCipher\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> SecureDatabase\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> getDatabase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context: \u003C/span>\u003Cspan style=\"color:#B392F0\">Context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">SupportSQLiteOpenHelper\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> passphrase \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> SQLCipherUtils.\u003C/span>\u003Cspan style=\"color:#B392F0\">getPassphrase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> factory \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> SupportFactory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(passphrase)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Room.\u003C/span>\u003Cspan style=\"color:#B392F0\">databaseBuilder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            context,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            AppDatabase::\u003C/span>\u003Cspan style=\"color:#B392F0\">class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.java,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"secure_db\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">openHelperFactory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(factory)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"2-network-security\">2. Network Security\u003C/h2>\n\u003Ch3 id=\"certificate-pinning\">Certificate Pinning\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> NetworkModule\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> provideOkHttpClient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">OkHttpClient\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> certificatePinner \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> CertificatePinner.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">                \"api.mybank.com\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">                \"sha256/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> OkHttpClient.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">certificatePinner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(certificatePinner)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"network-security-config\">Network Security Config\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"xml\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">&#x3C;!-- res/xml/network_security_config.xml -->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">network-security-config\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">domain-config\u003C/span>\u003Cspan style=\"color:#B392F0\"> cleartextTrafficPermitted\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"false\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">domain\u003C/span>\u003Cspan style=\"color:#B392F0\"> includeSubdomains\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"true\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>mybank.com&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">domain\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">pin-set\u003C/span>\u003Cspan style=\"color:#B392F0\"> expiration\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"2025-01-01\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">pin\u003C/span>\u003Cspan style=\"color:#B392F0\"> digest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"SHA-256\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>base64hash=&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">pin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">pin\u003C/span>\u003Cspan style=\"color:#B392F0\"> digest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"SHA-256\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>base64backup=&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">pin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">pin-set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">domain-config\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">network-security-config\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"3-authentication--biometrics\">3. Authentication &#x26; Biometrics\u003C/h2>\n\u003Ch3 id=\"biometric-authentication\">Biometric Authentication\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> BiometricManager\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> context: \u003C/span>\u003Cspan style=\"color:#B392F0\">Context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> executor \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ContextCompat.\u003C/span>\u003Cspan style=\"color:#B392F0\">getMainExecutor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> biometricPrompt \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> BiometricPrompt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        context \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> FragmentActivity,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        executor,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        authenticationCallback\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> authenticate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> promptInfo \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> BiometricPrompt.PromptInfo.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">setTitle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Xác thực sinh trắc học\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">setSubtitle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Sử dụng vân tay hoặc Face ID\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">setNegativeButtonText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Hủy\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">setAllowedAuthenticators\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                BiometricManager.Authenticators.BIOMETRIC_STRONG\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        biometricPrompt.\u003C/span>\u003Cspan style=\"color:#B392F0\">authenticate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(promptInfo)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> authenticationCallback \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> object\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">BiometricPrompt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">AuthenticationCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> onAuthenticationSucceeded\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result: \u003C/span>\u003Cspan style=\"color:#B392F0\">BiometricPrompt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.AuthenticationResult) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Handle success\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cipher \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result.cryptoObject?.cipher\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Use cipher to decrypt sensitive data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"cryptographic-operations-với-biometric\">Cryptographic Operations với Biometric\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> CryptoManager\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> keyAlias \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"BiometricKeyAlias\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> generateSecretKey\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> keyGenParameterSpec \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> KeyGenParameterSpec.\u003C/span>\u003Cspan style=\"color:#B392F0\">Builder\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            keyAlias,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            KeyProperties.PURPOSE_ENCRYPT or KeyProperties.PURPOSE_DECRYPT\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">setBlockModes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(KeyProperties.BLOCK_MODE_CBC)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">setEncryptionPaddings\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(KeyProperties.ENCRYPTION_PADDING_PKCS7)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">setUserAuthenticationRequired\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">setUserAuthenticationParameters\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">            30\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#6A737D\">// Timeout in seconds\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            KeyProperties.AUTH_BIOMETRIC_STRONG\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">build\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> keyGenerator \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> KeyGenerator.\u003C/span>\u003Cspan style=\"color:#B392F0\">getInstance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            KeyProperties.KEY_ALGORITHM_AES,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"AndroidKeyStore\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        keyGenerator.\u003C/span>\u003Cspan style=\"color:#B392F0\">init\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(keyGenParameterSpec)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        keyGenerator.\u003C/span>\u003Cspan style=\"color:#B392F0\">generateKey\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"4-code-obfuscation--protection\">4. Code Obfuscation &#x26; Protection\u003C/h2>\n\u003Ch3 id=\"proguardr8-configuration\">ProGuard/R8 Configuration\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan># Obfuscate code\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-obfuscationdictionary proguard-dict.txt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-classobfuscationdictionary proguard-dict.txt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-packageobfuscationdictionary proguard-dict.txt\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan># Keep security-critical classes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-keep class com.mybank.security.** { *; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan># Remove logging in release\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>-assumenosideeffects class android.util.Log {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    public static *** d(...);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    public static *** v(...);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    public static *** i(...);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"anti-tampering\">Anti-Tampering\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> IntegrityChecker\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> verifyAppSignature\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context: \u003C/span>\u003Cspan style=\"color:#B392F0\">Context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> packageInfo \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> context.packageManager\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">getPackageInfo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context.packageName, PackageManager.GET_SIGNATURES)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> signatures \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> packageInfo.signatures\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> expectedSignature \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"YOUR_RELEASE_SIGNATURE_HASH\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (signature \u003C/span>\u003Cspan style=\"color:#F97583\">in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> signatures) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> hash \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> MessageDigest.\u003C/span>\u003Cspan style=\"color:#B392F0\">getInstance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"SHA-256\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                .\u003C/span>\u003Cspan style=\"color:#B392F0\">digest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(signature.\u003C/span>\u003Cspan style=\"color:#B392F0\">toByteArray\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                .\u003C/span>\u003Cspan style=\"color:#B392F0\">toHexString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (hash \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> expectedSignature) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> detectRootedDevice\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> rootIndicators \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> listOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"/system/app/Superuser.apk\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"/sbin/su\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"/system/bin/su\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"/system/xbin/su\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> rootIndicators.\u003C/span>\u003Cspan style=\"color:#B392F0\">any\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">File\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(it).\u003C/span>\u003Cspan style=\"color:#B392F0\">exists\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"5-secure-communication\">5. Secure Communication\u003C/h2>\n\u003Ch3 id=\"end-to-end-encryption\">End-to-End Encryption\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> E2EEncryption\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> encryptMessage\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(message: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, publicKey: \u003C/span>\u003Cspan style=\"color:#B392F0\">PublicKey\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cipher \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">getInstance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"RSA/ECB/PKCS1Padding\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">init\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Cipher.ENCRYPT_MODE, publicKey)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> encrypted \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">doFinal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(message.\u003C/span>\u003Cspan style=\"color:#B392F0\">toByteArray\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Base64.\u003C/span>\u003Cspan style=\"color:#B392F0\">encodeToString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(encrypted, Base64.DEFAULT)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> decryptMessage\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(encrypted: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, privateKey: \u003C/span>\u003Cspan style=\"color:#B392F0\">PrivateKey\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cipher \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">getInstance\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"RSA/ECB/PKCS1Padding\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">init\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Cipher.DECRYPT_MODE, privateKey)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> decoded \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Base64.\u003C/span>\u003Cspan style=\"color:#B392F0\">decode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(encrypted, Base64.DEFAULT)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> decrypted \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> cipher.\u003C/span>\u003Cspan style=\"color:#B392F0\">doFinal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(decoded)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#B392F0\"> String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(decrypted)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"6-session-management\">6. Session Management\u003C/h2>\n\u003Ch3 id=\"secure-session-handling\">Secure Session Handling\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> SessionManager\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> sessionTimeout \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 60\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1000L\u003C/span>\u003Cspan style=\"color:#6A737D\"> // 5 minutes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lastActivityTime \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> System.\u003C/span>\u003Cspan style=\"color:#B392F0\">currentTimeMillis\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> checkSession\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> currentTime \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> System.\u003C/span>\u003Cspan style=\"color:#B392F0\">currentTimeMillis\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (currentTime \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> lastActivityTime \u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> sessionTimeout) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            logout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        updateActivityTime\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> updateActivityTime\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        lastActivityTime \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> System.\u003C/span>\u003Cspan style=\"color:#B392F0\">currentTimeMillis\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> logout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Clear all sensitive data\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        clearTokens\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        clearCache\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        navigateToLogin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"7-input-validation\">7. Input Validation\u003C/h2>\n\u003Ch3 id=\"prevent-sql-injection\">Prevent SQL Injection\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserRepository\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ❌ Bad - Vulnerable to SQL injection\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> getUserBad\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(username: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">? {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> query \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"SELECT * FROM users WHERE username = '\u003C/span>\u003Cspan style=\"color:#79B8FF\">$username\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> database.\u003C/span>\u003Cspan style=\"color:#B392F0\">rawQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query, \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ✅ Good - Parameterized query\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> getUserGood\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(username: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">? {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> query \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"SELECT * FROM users WHERE username = ?\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> database.\u003C/span>\u003Cspan style=\"color:#B392F0\">rawQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query, \u003C/span>\u003Cspan style=\"color:#B392F0\">arrayOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(username))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"input-sanitization\">Input Sanitization\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> InputValidator\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> validateEmail\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(email: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> pattern \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Patterns.EMAIL_ADDRESS\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> pattern.\u003C/span>\u003Cspan style=\"color:#B392F0\">matcher\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(email).\u003C/span>\u003Cspan style=\"color:#B392F0\">matches\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> sanitizeInput\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(input: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> input\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x3C;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x26;lt;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x26;gt;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x26;quot;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"'\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x26;#x27;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x26;#x2F;\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"8-logging--error-handling\">8. Logging &#x26; Error Handling\u003C/h2>\n\u003Ch3 id=\"secure-logging\">Secure Logging\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> SecureLogger\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(message: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (BuildConfig.DEBUG) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            Log.\u003C/span>\u003Cspan style=\"color:#B392F0\">d\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(TAG, \u003C/span>\u003Cspan style=\"color:#B392F0\">sanitizeLog\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(message))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> sanitizeLog\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(message: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Remove sensitive data patterns\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> message\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Regex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">b\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">d{16}\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"****\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#6A737D\">// Credit card\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Regex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">b\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">d{9,10}\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"****\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#6A737D\">// Phone number\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Regex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\\\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.[a-zA-Z]{2,}\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"****@****\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"9-webview-security\">9. WebView Security\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> SecureWebView\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> configureWebView\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(webView: \u003C/span>\u003Cspan style=\"color:#B392F0\">WebView\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        webView.settings.\u003C/span>\u003Cspan style=\"color:#B392F0\">apply\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            javaScriptEnabled \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Enable only if needed\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            allowFileAccess \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            allowContentAccess \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            savePassword \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            saveFormData \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">        // Validate URLs before loading\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        webView.webViewClient \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> object\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">WebViewClient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> shouldOverrideUrlLoading\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(view: \u003C/span>\u003Cspan style=\"color:#B392F0\">WebView\u003C/span>\u003Cspan style=\"color:#E1E4E8\">?, request: \u003C/span>\u003Cspan style=\"color:#B392F0\">WebResourceRequest\u003C/span>\u003Cspan style=\"color:#E1E4E8\">?): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> url \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> request?.url?.\u003C/span>\u003Cspan style=\"color:#B392F0\">toString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() ?: \u003C/span>\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                return\u003C/span>\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#B392F0\">isUrlSafe\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(url)) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                    false\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Load the URL\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                } \u003C/span>\u003Cspan style=\"color:#F97583\">else\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                    true\u003C/span>\u003Cspan style=\"color:#6A737D\"> // Block the URL\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"10-security-checklist\">10. Security Checklist\u003C/h2>\n\u003Ch3 id=\"pre-release-security-audit\">Pre-release Security Audit\u003C/h3>\n\u003Cul class=\"contains-task-list\">\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> All sensitive data encrypted\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Certificate pinning implemented\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> ProGuard/R8 enabled\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> No hardcoded secrets\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Root detection active\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Anti-tampering measures\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Secure session management\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Input validation on all forms\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> No sensitive data in logs\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> WebView properly configured\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Biometric authentication for sensitive operations\u003C/li>\n\u003Cli class=\"task-list-item\">\u003Cinput type=\"checkbox\" disabled> Network security config properly set\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"tools-for-security-testing\">Tools for Security Testing\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>MobSF\u003C/strong> - Mobile Security Framework\u003C/li>\n\u003Cli>\u003Cstrong>QARK\u003C/strong> - Quick Android Review Kit\u003C/li>\n\u003Cli>\u003Cstrong>Drozer\u003C/strong> - Security testing framework\u003C/li>\n\u003Cli>\u003Cstrong>Android Studio Lint\u003C/strong> - Built-in security checks\u003C/li>\n\u003Cli>\u003Cstrong>Frida\u003C/strong> - Dynamic instrumentation\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"conclusion\">Conclusion\u003C/h2>\n\u003Cp>Security trong banking apps không phải optional - it’s mandatory. Implement càng nhiều layers càng tốt (defense in depth). Remember: security is not a feature, it’s a process.\u003C/p>\n\u003Cp>Stay secure! 🔐\u003C/p>",{"headings":386,"localImagePaths":466,"remoteImagePaths":467,"frontmatter":468,"imagePaths":471},[387,390,393,396,399,402,405,408,411,414,417,420,423,426,429,432,435,438,441,444,447,450,453,456,459,462,465],{"depth":37,"slug":388,"text":389},"introduction","Introduction",{"depth":37,"slug":391,"text":392},"1-data-encryption","1. Data Encryption",{"depth":47,"slug":394,"text":395},"encrypt-sensitive-data","Encrypt Sensitive Data",{"depth":47,"slug":397,"text":398},"database-encryption-với-sqlcipher","Database Encryption với SQLCipher",{"depth":37,"slug":400,"text":401},"2-network-security","2. Network Security",{"depth":47,"slug":403,"text":404},"certificate-pinning","Certificate Pinning",{"depth":47,"slug":406,"text":407},"network-security-config","Network Security Config",{"depth":37,"slug":409,"text":410},"3-authentication--biometrics","3. Authentication & Biometrics",{"depth":47,"slug":412,"text":413},"biometric-authentication","Biometric Authentication",{"depth":47,"slug":415,"text":416},"cryptographic-operations-với-biometric","Cryptographic Operations với Biometric",{"depth":37,"slug":418,"text":419},"4-code-obfuscation--protection","4. Code Obfuscation & Protection",{"depth":47,"slug":421,"text":422},"proguardr8-configuration","ProGuard/R8 Configuration",{"depth":47,"slug":424,"text":425},"anti-tampering","Anti-Tampering",{"depth":37,"slug":427,"text":428},"5-secure-communication","5. Secure Communication",{"depth":47,"slug":430,"text":431},"end-to-end-encryption","End-to-End Encryption",{"depth":37,"slug":433,"text":434},"6-session-management","6. Session Management",{"depth":47,"slug":436,"text":437},"secure-session-handling","Secure Session Handling",{"depth":37,"slug":439,"text":440},"7-input-validation","7. Input Validation",{"depth":47,"slug":442,"text":443},"prevent-sql-injection","Prevent SQL Injection",{"depth":47,"slug":445,"text":446},"input-sanitization","Input Sanitization",{"depth":37,"slug":448,"text":449},"8-logging--error-handling","8. Logging & Error Handling",{"depth":47,"slug":451,"text":452},"secure-logging","Secure Logging",{"depth":37,"slug":454,"text":455},"9-webview-security","9. WebView Security",{"depth":37,"slug":457,"text":458},"10-security-checklist","10. Security Checklist",{"depth":47,"slug":460,"text":461},"pre-release-security-audit","Pre-release Security Audit",{"depth":37,"slug":463,"text":464},"tools-for-security-testing","Tools for Security Testing",{"depth":37,"slug":360,"text":361},[],[],{"title":371,"description":372,"pubDate":469,"author":17,"category":152,"tags":470,"featured":25,"language":27,"readingTime":28},["Date","2024-01-25T00:00:00.000Z"],[20,375,376,377,378,379],[]]