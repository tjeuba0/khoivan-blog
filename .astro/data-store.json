[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.9","content-config-digest","31c2797ea3e17b86","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://khoivan.dev\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":true,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,56,57,120,121,210,211,256,257,267,268,277,278],"clean-architecture-android",{"id":11,"data":13,"body":29,"filePath":30,"digest":31,"rendered":32},{"title":14,"description":15,"pubDate":16,"author":17,"category":18,"tags":19,"draft":25,"featured":26,"language":27,"readingTime":28,"categorySlug":18},"Clean Architecture trong Android - H∆∞·ªõng d·∫´n t·ª´ A-Z","T√¨m hi·ªÉu c√°ch apply Clean Architecture v√†o d·ª± √°n Android th·ª±c t·∫ø v·ªõi Kotlin, MVVM v√† Jetpack Compose",["Date","2024-01-10T00:00:00.000Z"],"Khoi Van","engineering",[20,21,22,23,24],"android","clean-architecture","kotlin","mvvm","jetpack-compose",false,true,"vi","15 min read","## Gi·ªõi thi·ªáu\n\nClean Architecture l√† m·ªôt pattern ƒë∆∞·ª£c Uncle Bob (Robert C. Martin) gi·ªõi thi·ªáu,\ngi√∫p t·∫°o ra code base d·ªÖ maintain, test v√† scale. Trong b√†i vi·∫øt n√†y, t√¥i s·∫Ω\nchia s·∫ª c√°ch apply Clean Architecture v√†o d·ª± √°n Android.\n\n## T·∫°i sao c·∫ßn Clean Architecture?\n\nSau 8 nƒÉm l√†m Android, t√¥i nh·∫≠n th·∫•y nhi·ªÅu d·ª± √°n g·∫∑p v·∫•n ƒë·ªÅ:\n\n- Code kh√≥ maintain khi app l·ªõn d·∫ßn\n- Kh√≥ vi·∫øt unit test\n- Business logic b·ªã tr·ªôn l·∫´n v·ªõi UI\n- Kh√≥ thay ƒë·ªïi ho·∫∑c th√™m features m·ªõi\n\nClean Architecture gi·∫£i quy·∫øt t·∫•t c·∫£ v·∫•n ƒë·ªÅ tr√™n!\n\n## C√°c t·∫ßng trong Clean Architecture\n\n### 1. Domain Layer (Core Business)\n\n```kotlin\n// UseCase example\nclass GetUserUseCase(\n    private val userRepository: UserRepository\n) {\n    suspend operator fun invoke(userId: String): User {\n        return userRepository.getUser(userId)\n    }\n}\n```","src/content/blog/clean-architecture-android.md","dc47a31ac2c61f05",{"html":33,"metadata":34},"\u003Ch2 id=\"gi·ªõi-thi·ªáu\">Gi·ªõi thi·ªáu\u003C/h2>\n\u003Cp>Clean Architecture l√† m·ªôt pattern ƒë∆∞·ª£c Uncle Bob (Robert C. Martin) gi·ªõi thi·ªáu,\ngi√∫p t·∫°o ra code base d·ªÖ maintain, test v√† scale. Trong b√†i vi·∫øt n√†y, t√¥i s·∫Ω\nchia s·∫ª c√°ch apply Clean Architecture v√†o d·ª± √°n Android.\u003C/p>\n\u003Ch2 id=\"t·∫°i-sao-c·∫ßn-clean-architecture\">T·∫°i sao c·∫ßn Clean Architecture?\u003C/h2>\n\u003Cp>Sau 8 nƒÉm l√†m Android, t√¥i nh·∫≠n th·∫•y nhi·ªÅu d·ª± √°n g·∫∑p v·∫•n ƒë·ªÅ:\u003C/p>\n\u003Cul>\n\u003Cli>Code kh√≥ maintain khi app l·ªõn d·∫ßn\u003C/li>\n\u003Cli>Kh√≥ vi·∫øt unit test\u003C/li>\n\u003Cli>Business logic b·ªã tr·ªôn l·∫´n v·ªõi UI\u003C/li>\n\u003Cli>Kh√≥ thay ƒë·ªïi ho·∫∑c th√™m features m·ªõi\u003C/li>\n\u003C/ul>\n\u003Cp>Clean Architecture gi·∫£i quy·∫øt t·∫•t c·∫£ v·∫•n ƒë·ªÅ tr√™n!\u003C/p>\n\u003Ch2 id=\"c√°c-t·∫ßng-trong-clean-architecture\">C√°c t·∫ßng trong Clean Architecture\u003C/h2>\n\u003Ch3 id=\"1-domain-layer-core-business\">1. Domain Layer (Core Business)\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// UseCase example\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> GetUserUseCase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userRepository: \u003C/span>\u003Cspan style=\"color:#B392F0\">UserRepository\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    suspend\u003C/span>\u003Cspan style=\"color:#F97583\"> operator\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> invoke\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">): \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userRepository.\u003C/span>\u003Cspan style=\"color:#B392F0\">getUser\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",{"headings":35,"localImagePaths":50,"remoteImagePaths":51,"frontmatter":52,"imagePaths":55},[36,40,43,46],{"depth":37,"slug":38,"text":39},2,"gi·ªõi-thi·ªáu","Gi·ªõi thi·ªáu",{"depth":37,"slug":41,"text":42},"t·∫°i-sao-c·∫ßn-clean-architecture","T·∫°i sao c·∫ßn Clean Architecture?",{"depth":37,"slug":44,"text":45},"c√°c-t·∫ßng-trong-clean-architecture","C√°c t·∫ßng trong Clean Architecture",{"depth":47,"slug":48,"text":49},3,"1-domain-layer-core-business","1. Domain Layer (Core Business)",[],[],{"title":14,"description":15,"pubDate":53,"author":17,"category":18,"tags":54,"featured":26,"language":27,"readingTime":28},["Date","2024-01-10T00:00:00.000Z"],[20,21,22,23,24],[],"from-samsung-to-pixel",{"id":56,"data":58,"body":68,"filePath":69,"digest":70,"rendered":71},{"title":59,"description":60,"pubDate":61,"author":17,"category":62,"tags":63,"mood":66,"draft":25,"featured":25,"language":27,"readingTime":67,"categorySlug":62},"From Samsung to Pixel: T·∫°i sao dev Android l·∫°i d√πng iPhone?","C√¢u chuy·ªán v·ªÅ paradox c·ªßa m·ªôt Android developer v√† chi·∫øc iPhone trong t√∫i",["Date","2024-01-27T17:00:00.000Z"],"life",[20,62,64,65],"opinion","devices","humorous","5 min read","## The Confession\n\nOkay, I'll admit it. T√¥i l√† Android developer v·ªõi 8 nƒÉm kinh nghi·ªám, v√† t√¥i ƒëang g√µ b√†i n√†y tr√™n... iPhone.\n\n*Waits for the gasps to die down*\n\nNh∆∞ng khoan, h√£y ƒë·ªÉ t√¥i gi·∫£i th√≠ch! üòÖ\n\n## The Journey\n\n### 2016 - Samsung Galaxy S7 Edge\nNh·ªØng ng√†y ƒë·∫ßu l√†m Android dev. Edge screen l√† revolutionary. T√¥i customize m·ªçi th·ª©: launcher, icon pack, widgets. Phone c·ªßa t√¥i nh∆∞ m·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t.\n\n```kotlin\n// My first \"Hello World\" was written and tested on this phone\nToast.makeText(context, \"Hello from S7 Edge!\", Toast.LENGTH_SHORT).show()\n```\n\n### 2018 - OnePlus 6\nSpeed. Pure speed. OxygenOS clean nh∆∞ Vanilla Android. Perfect cho development.\n\n### 2020 - Pixel 4a\nFinally! Pure Android experience. First to get updates. Camera tuy·ªát v·ªùi cho... ch·ª•p bug screenshots. üì∏\n\n### 2022 - iPhone 13 Pro\nPlot twist! \n\n## T·∫°i sao l·∫°i iPhone?\n\nM·ªôt bu·ªïi t·ªëi, sau khi fix xong bug th·ª© n c·ªßa app, t√¥i nh·∫≠n ra:\n\n**Sau 8 ti·∫øng code Android, ƒëi·ªÅu cu·ªëi c√πng t√¥i mu·ªën l√† troubleshoot phone c·ªßa m√¨nh.**\n\n- Mu·ªën banking app just works\n- Mu·ªën camera ch·ª•p xong l√† ƒë·∫πp, kh√¥ng c·∫ßn edit\n- Mu·ªën battery t·∫≠n 2 ng√†y kh√¥ng s·∫°c\n- Mu·ªën m·ªçi th·ª©... boring v√† reliable\n\n## The Daily Paradox\n\nS√°ng: Debug Android app tr√™n 5 test devices\nTr∆∞a: \"iOS has better UX\" - t√¥i n√≥i trong meeting\nChi·ªÅu: Implement Material Design 3\nT·ªëi: FaceTime v·ªõi b·∫°n b√® tr√™n iPhone\n\n## What I Miss About Android\n\n1. **Back button** - Swipe gesture kh√¥ng bao gi·ªù b·∫±ng ƒë∆∞·ª£c\n2. **File system** - iOS Files app l√† m·ªôt joke\n3. **Default apps** - Mu·ªën d√πng Firefox? Good luck!\n4. **Customization** - Home screen iOS nh∆∞ nh√† t√π\n5. **USB-C** - Oh wait, iPhone 15 c√≥ r·ªìi üòÑ\n\n## What I Don't Miss\n\n1. **\"WhatsApp has stopped\"** notifications\n2. **Random battery drain** t·ª´ rogue apps\n3. **Which launcher should I use today?** paralysis\n4. **Fragmentation hell** khi test app\n5. **My mom asking** \"Con ∆°i, phone m·∫π lag qu√°\"\n\n## The Truth\n\nAndroid developer d√πng iPhone kh√¥ng ph·∫£i betrayal. It's **separation of concerns**.\n\n```kotlin\nclass KhoiVan : Developer {\n    val workPhone = Pixel(8, \"For testing\")\n    val personalPhone = iPhone(13, \"For living\")\n    \n    override fun isHypocrite(): Boolean {\n        return false // It's called work-life balance üòé\n    }\n}\n```\n\n## The Real Real Truth\n\nCu·ªëi c√πng th√¨, phone ch·ªâ l√† tool. Android hay iOS, quan tr·ªçng l√†:\n- Code b·∫°n vi·∫øt c√≥ clean kh√¥ng?\n- App b·∫°n l√†m c√≥ solve real problems kh√¥ng?\n- User c√≥ happy kh√¥ng?\n\nV√† honestly? Khi b·∫°n ƒë√£ l√†m vi·ªác v·ªõi c·∫£ hai platforms ƒë·ªß l√¢u, b·∫°n s·∫Ω nh·∫≠n ra ch√∫ng ƒëang ng√†y c√†ng gi·ªëng nhau. iOS copy Android features, Android copy iOS features. \n\nCircle of life. üîÑ\n\n## P/S\n\nTeam Android ·ªü c√¥ng ty v·∫´n ch∆∞a tha th·ª© cho t√¥i. M·ªói l·∫ßn iPhone rung trong meeting, t√¥i ph·∫£i gi·∫£i th√≠ch \"It's for competitive analysis!\" \n\nSure, Khoi. Sure. üòè\n\n---\n\n*Currently using: iPhone 13 Pro (personal), Pixel 8 (work), iPad (Netflix), MacBook (everything else), v√† Samsung Galaxy Watch (because why not make it more complicated?)*","src/content/blog/from-samsung-to-pixel.md","14c5ced9b31e5d75",{"html":72,"metadata":73},"\u003Ch2 id=\"the-confession\">The Confession\u003C/h2>\n\u003Cp>Okay, I‚Äôll admit it. T√¥i l√† Android developer v·ªõi 8 nƒÉm kinh nghi·ªám, v√† t√¥i ƒëang g√µ b√†i n√†y tr√™n‚Ä¶ iPhone.\u003C/p>\n\u003Cp>\u003Cem>Waits for the gasps to die down\u003C/em>\u003C/p>\n\u003Cp>Nh∆∞ng khoan, h√£y ƒë·ªÉ t√¥i gi·∫£i th√≠ch! üòÖ\u003C/p>\n\u003Ch2 id=\"the-journey\">The Journey\u003C/h2>\n\u003Ch3 id=\"2016---samsung-galaxy-s7-edge\">2016 - Samsung Galaxy S7 Edge\u003C/h3>\n\u003Cp>Nh·ªØng ng√†y ƒë·∫ßu l√†m Android dev. Edge screen l√† revolutionary. T√¥i customize m·ªçi th·ª©: launcher, icon pack, widgets. Phone c·ªßa t√¥i nh∆∞ m·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// My first \"Hello World\" was written and tested on this phone\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Toast.\u003C/span>\u003Cspan style=\"color:#B392F0\">makeText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(context, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Hello from S7 Edge!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, Toast.LENGTH_SHORT).\u003C/span>\u003Cspan style=\"color:#B392F0\">show\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2018---oneplus-6\">2018 - OnePlus 6\u003C/h3>\n\u003Cp>Speed. Pure speed. OxygenOS clean nh∆∞ Vanilla Android. Perfect cho development.\u003C/p>\n\u003Ch3 id=\"2020---pixel-4a\">2020 - Pixel 4a\u003C/h3>\n\u003Cp>Finally! Pure Android experience. First to get updates. Camera tuy·ªát v·ªùi cho‚Ä¶ ch·ª•p bug screenshots. üì∏\u003C/p>\n\u003Ch3 id=\"2022---iphone-13-pro\">2022 - iPhone 13 Pro\u003C/h3>\n\u003Cp>Plot twist!\u003C/p>\n\u003Ch2 id=\"t·∫°i-sao-l·∫°i-iphone\">T·∫°i sao l·∫°i iPhone?\u003C/h2>\n\u003Cp>M·ªôt bu·ªïi t·ªëi, sau khi fix xong bug th·ª© n c·ªßa app, t√¥i nh·∫≠n ra:\u003C/p>\n\u003Cp>\u003Cstrong>Sau 8 ti·∫øng code Android, ƒëi·ªÅu cu·ªëi c√πng t√¥i mu·ªën l√† troubleshoot phone c·ªßa m√¨nh.\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Mu·ªën banking app just works\u003C/li>\n\u003Cli>Mu·ªën camera ch·ª•p xong l√† ƒë·∫πp, kh√¥ng c·∫ßn edit\u003C/li>\n\u003Cli>Mu·ªën battery t·∫≠n 2 ng√†y kh√¥ng s·∫°c\u003C/li>\n\u003Cli>Mu·ªën m·ªçi th·ª©‚Ä¶ boring v√† reliable\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"the-daily-paradox\">The Daily Paradox\u003C/h2>\n\u003Cp>S√°ng: Debug Android app tr√™n 5 test devices\nTr∆∞a: ‚ÄúiOS has better UX‚Äù - t√¥i n√≥i trong meeting\nChi·ªÅu: Implement Material Design 3\nT·ªëi: FaceTime v·ªõi b·∫°n b√® tr√™n iPhone\u003C/p>\n\u003Ch2 id=\"what-i-miss-about-android\">What I Miss About Android\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>Back button\u003C/strong> - Swipe gesture kh√¥ng bao gi·ªù b·∫±ng ƒë∆∞·ª£c\u003C/li>\n\u003Cli>\u003Cstrong>File system\u003C/strong> - iOS Files app l√† m·ªôt joke\u003C/li>\n\u003Cli>\u003Cstrong>Default apps\u003C/strong> - Mu·ªën d√πng Firefox? Good luck!\u003C/li>\n\u003Cli>\u003Cstrong>Customization\u003C/strong> - Home screen iOS nh∆∞ nh√† t√π\u003C/li>\n\u003Cli>\u003Cstrong>USB-C\u003C/strong> - Oh wait, iPhone 15 c√≥ r·ªìi üòÑ\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"what-i-dont-miss\">What I Don‚Äôt Miss\u003C/h2>\n\u003Col>\n\u003Cli>\u003Cstrong>‚ÄúWhatsApp has stopped‚Äù\u003C/strong> notifications\u003C/li>\n\u003Cli>\u003Cstrong>Random battery drain\u003C/strong> t·ª´ rogue apps\u003C/li>\n\u003Cli>\u003Cstrong>Which launcher should I use today?\u003C/strong> paralysis\u003C/li>\n\u003Cli>\u003Cstrong>Fragmentation hell\u003C/strong> khi test app\u003C/li>\n\u003Cli>\u003Cstrong>My mom asking\u003C/strong> ‚ÄúCon ∆°i, phone m·∫π lag qu√°‚Äù\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"the-truth\">The Truth\u003C/h2>\n\u003Cp>Android developer d√πng iPhone kh√¥ng ph·∫£i betrayal. It‚Äôs \u003Cstrong>separation of concerns\u003C/strong>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> KhoiVan\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">Developer\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> workPhone \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> Pixel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">8\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"For testing\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> personalPhone \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> iPhone\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">13\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"For living\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    override\u003C/span>\u003Cspan style=\"color:#F97583\"> fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> isHypocrite\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(): \u003C/span>\u003Cspan style=\"color:#B392F0\">Boolean\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> false\u003C/span>\u003Cspan style=\"color:#6A737D\"> // It's called work-life balance üòé\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"the-real-real-truth\">The Real Real Truth\u003C/h2>\n\u003Cp>Cu·ªëi c√πng th√¨, phone ch·ªâ l√† tool. Android hay iOS, quan tr·ªçng l√†:\u003C/p>\n\u003Cul>\n\u003Cli>Code b·∫°n vi·∫øt c√≥ clean kh√¥ng?\u003C/li>\n\u003Cli>App b·∫°n l√†m c√≥ solve real problems kh√¥ng?\u003C/li>\n\u003Cli>User c√≥ happy kh√¥ng?\u003C/li>\n\u003C/ul>\n\u003Cp>V√† honestly? Khi b·∫°n ƒë√£ l√†m vi·ªác v·ªõi c·∫£ hai platforms ƒë·ªß l√¢u, b·∫°n s·∫Ω nh·∫≠n ra ch√∫ng ƒëang ng√†y c√†ng gi·ªëng nhau. iOS copy Android features, Android copy iOS features.\u003C/p>\n\u003Cp>Circle of life. üîÑ\u003C/p>\n\u003Ch2 id=\"ps\">P/S\u003C/h2>\n\u003Cp>Team Android ·ªü c√¥ng ty v·∫´n ch∆∞a tha th·ª© cho t√¥i. M·ªói l·∫ßn iPhone rung trong meeting, t√¥i ph·∫£i gi·∫£i th√≠ch ‚ÄúIt‚Äôs for competitive analysis!‚Äù\u003C/p>\n\u003Cp>Sure, Khoi. Sure. üòè\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Currently using: iPhone 13 Pro (personal), Pixel 8 (work), iPad (Netflix), MacBook (everything else), v√† Samsung Galaxy Watch (because why not make it more complicated?)\u003C/em>\u003C/p>",{"headings":74,"localImagePaths":114,"remoteImagePaths":115,"frontmatter":116,"imagePaths":119},[75,78,81,84,87,90,93,96,99,102,105,108,111],{"depth":37,"slug":76,"text":77},"the-confession","The Confession",{"depth":37,"slug":79,"text":80},"the-journey","The Journey",{"depth":47,"slug":82,"text":83},"2016---samsung-galaxy-s7-edge","2016 - Samsung Galaxy S7 Edge",{"depth":47,"slug":85,"text":86},"2018---oneplus-6","2018 - OnePlus 6",{"depth":47,"slug":88,"text":89},"2020---pixel-4a","2020 - Pixel 4a",{"depth":47,"slug":91,"text":92},"2022---iphone-13-pro","2022 - iPhone 13 Pro",{"depth":37,"slug":94,"text":95},"t·∫°i-sao-l·∫°i-iphone","T·∫°i sao l·∫°i iPhone?",{"depth":37,"slug":97,"text":98},"the-daily-paradox","The Daily Paradox",{"depth":37,"slug":100,"text":101},"what-i-miss-about-android","What I Miss About Android",{"depth":37,"slug":103,"text":104},"what-i-dont-miss","What I Don‚Äôt Miss",{"depth":37,"slug":106,"text":107},"the-truth","The Truth",{"depth":37,"slug":109,"text":110},"the-real-real-truth","The Real Real Truth",{"depth":37,"slug":112,"text":113},"ps","P/S",[],[],{"title":59,"description":60,"pubDate":117,"author":17,"category":62,"tags":118,"language":27,"mood":66},"Jan 28 2024",[20,62,64,65],[],"jetpack-compose-best-practices",{"id":120,"data":122,"body":130,"filePath":131,"digest":132,"rendered":133},{"title":123,"description":124,"pubDate":125,"author":17,"category":18,"tags":126,"draft":25,"featured":25,"language":27,"readingTime":129,"categorySlug":18},"Jetpack Compose Best Practices - T·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao","T·ªïng h·ª£p c√°c best practices khi l√†m vi·ªác v·ªõi Jetpack Compose, t·ª´ performance optimization ƒë·∫øn state management",["Date","2024-01-15T00:00:00.000Z"],[24,20,22,127,128],"ui","performance","12 min read","## Gi·ªõi thi·ªáu\n\nJetpack Compose ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch ch√∫ng ta x√¢y d·ª±ng UI trong Android. Sau 2 nƒÉm l√†m vi·ªác v·ªõi Compose trong production, t√¥i mu·ªën chia s·∫ª nh·ªØng best practices gi√∫p code c·ªßa b·∫°n clean, performant v√† maintainable.\n\n## 1. State Management\n\n### Remember vs RememberSaveable\n\n```kotlin\n@Composable\nfun CounterScreen() {\n    // S·∫Ω b·ªã reset khi configuration change\n    var count by remember { mutableStateOf(0) }\n\n    // ƒê∆∞·ª£c preserve qua configuration changes\n    var savedCount by rememberSaveable { mutableStateOf(0) }\n}\n```\n\n### State Hoisting\n\nLu√¥n hoist state l√™n component cha khi c·∫ßn share gi·ªØa nhi·ªÅu composables:\n\n```kotlin\n@Composable\nfun TodoScreen() {\n    var todos by remember { mutableStateOf(listOf\u003CTodo>()) }\n\n    TodoList(\n        todos = todos,\n        onTodoClick = { todo ->\n            // Handle click\n        }\n    )\n}\n\n@Composable\nfun TodoList(\n    todos: List\u003CTodo>,\n    onTodoClick: (Todo) -> Unit\n) {\n    // Stateless composable\n}\n```\n\n## 2. Performance Optimization\n\n### Stable Types\n\nƒê√°nh d·∫•u data classes v·ªõi `@Stable` ho·∫∑c `@Immutable`:\n\n```kotlin\n@Stable\ndata class User(\n    val id: String,\n    val name: String,\n    val avatar: String\n)\n```\n\n### Remember Lambda\n\nTr√°nh t·∫°o lambda m·ªõi trong m·ªói recomposition:\n\n```kotlin\n@Composable\nfun UserItem(user: User, onClick: () -> Unit) {\n    // ‚ùå Bad - t·∫°o lambda m·ªõi m·ªói l·∫ßn\n    Button(onClick = { onClick() }) {\n        Text(user.name)\n    }\n\n    // ‚úÖ Good - pass tr·ª±c ti·∫øp\n    Button(onClick = onClick) {\n        Text(user.name)\n    }\n}\n```\n\n### LazyColumn Keys\n\nLu√¥n provide stable keys cho LazyColumn items:\n\n```kotlin\nLazyColumn {\n    items(\n        items = users,\n        key = { user -> user.id } // Stable key\n    ) { user ->\n        UserItem(user)\n    }\n}\n```\n\n## 3. Side Effects\n\n### LaunchedEffect vs SideEffect vs DisposableEffect\n\n```kotlin\n@Composable\nfun LocationScreen(locationService: LocationService) {\n    // Run once when key changes\n    LaunchedEffect(locationService) {\n        locationService.startTracking()\n    }\n\n    // Run on every recomposition\n    SideEffect {\n        analytics.logScreenView(\"location\")\n    }\n\n    // With cleanup\n    DisposableEffect(locationService) {\n        val listener = locationService.addListener { }\n        onDispose {\n            locationService.removeListener(listener)\n        }\n    }\n}\n```\n\n## 4. Modifiers Best Practices\n\n### Order Matters\n\n```kotlin\n@Composable\nfun ClickableCard() {\n    Box(\n        modifier = Modifier\n            .padding(16.dp)      // Padding tr∆∞·ªõc\n            .clickable { }       // Clickable sau\n            .background(Color.Blue)\n    )\n}\n```\n\n### Reuse Modifiers\n\n```kotlin\n@Composable\nfun MyScreen() {\n    val commonModifier = Modifier\n        .fillMaxWidth()\n        .padding(horizontal = 16.dp)\n\n    Column {\n        Text(\"Title\", modifier = commonModifier)\n        Text(\"Subtitle\", modifier = commonModifier)\n    }\n}\n```\n\n## 5. Preview Best Practices\n\n### Multiple Previews\n\n```kotlin\n@Preview(name = \"Light Mode\")\n@Preview(name = \"Dark Mode\", uiMode = UI_MODE_NIGHT_YES)\n@Preview(name = \"Large Font\", fontScale = 1.5f)\n@Composable\nfun UserCardPreview() {\n    MyTheme {\n        UserCard(\n            user = User(\n                id = \"1\",\n                name = \"John Doe\",\n                avatar = \"https://example.com/avatar.jpg\"\n            )\n        )\n    }\n}\n```\n\n## 6. Navigation\n\n### Type-safe Navigation\n\n```kotlin\n@Serializable\ndata class ProfileRoute(val userId: String)\n\n@Composable\nfun NavigationGraph(navController: NavHostController) {\n    NavHost(navController, startDestination = \"home\") {\n        composable(\"home\") {\n            HomeScreen(\n                onProfileClick = { userId ->\n                    navController.navigate(ProfileRoute(userId))\n                }\n            )\n        }\n\n        composable\u003CProfileRoute> { backStackEntry ->\n            val route = backStackEntry.toRoute\u003CProfileRoute>()\n            ProfileScreen(userId = route.userId)\n        }\n    }\n}\n```\n\n## 7. Testing\n\n### UI Testing\n\n```kotlin\n@Test\nfun userCard_displaysCorrectInfo() {\n    composeTestRule.setContent {\n        UserCard(testUser)\n    }\n\n    composeTestRule\n        .onNodeWithText(testUser.name)\n        .assertIsDisplayed()\n\n    composeTestRule\n        .onNodeWithContentDescription(\"User avatar\")\n        .assertExists()\n}\n```\n\n## 8. Common Pitfalls to Avoid\n\n### 1. Using MutableState directly in ViewModel\n\n```kotlin\n// ‚ùå Bad\nclass MyViewModel : ViewModel() {\n    val state = mutableStateOf(UiState())\n}\n\n// ‚úÖ Good\nclass MyViewModel : ViewModel() {\n    private val _state = MutableStateFlow(UiState())\n    val state = _state.asStateFlow()\n}\n```\n\n### 2. Not using derivedStateOf\n\n```kotlin\n@Composable\nfun SearchScreen(items: List\u003CItem>) {\n    var query by remember { mutableStateOf(\"\") }\n\n    // ‚ùå Bad - recalculates on every recomposition\n    val filtered = items.filter { it.name.contains(query) }\n\n    // ‚úÖ Good - only recalculates when dependencies change\n    val filtered by remember(items, query) {\n        derivedStateOf {\n            items.filter { it.name.contains(query) }\n        }\n    }\n}\n```\n\n## K·∫øt lu·∫≠n\n\nJetpack Compose l√† m·ªôt c√¥ng c·ª• m·∫°nh m·∫Ω, nh∆∞ng ƒë·ªÉ s·ª≠ d·ª•ng hi·ªáu qu·∫£ c·∫ßn hi·ªÉu r√µ c√°c best practices. Hy v·ªçng nh·ªØng tips n√†y gi√∫p b·∫°n vi·∫øt Compose code t·ªët h∆°n!\n\nC√≥ c√¢u h·ªèi? Comment b√™n d∆∞·ªõi ho·∫∑c connect v·ªõi m√¨nh qua [LinkedIn](https://linkedin.com/in/khoivan)!","src/content/blog/jetpack-compose-best-practices.md","bfee36afedd7daab",{"html":134,"metadata":135},"\u003Ch2 id=\"gi·ªõi-thi·ªáu\">Gi·ªõi thi·ªáu\u003C/h2>\n\u003Cp>Jetpack Compose ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch ch√∫ng ta x√¢y d·ª±ng UI trong Android. Sau 2 nƒÉm l√†m vi·ªác v·ªõi Compose trong production, t√¥i mu·ªën chia s·∫ª nh·ªØng best practices gi√∫p code c·ªßa b·∫°n clean, performant v√† maintainable.\u003C/p>\n\u003Ch2 id=\"1-state-management\">1. State Management\u003C/h2>\n\u003Ch3 id=\"remember-vs-remembersaveable\">Remember vs RememberSaveable\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> CounterScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // S·∫Ω b·ªã reset khi configuration change\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> count \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ƒê∆∞·ª£c preserve qua configuration changes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> savedCount \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> rememberSaveable\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"state-hoisting\">State Hoisting\u003C/h3>\n\u003Cp>Lu√¥n hoist state l√™n component cha khi c·∫ßn share gi·ªØa nhi·ªÅu composables:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> TodoScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todos \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">listOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    TodoList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        todos \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> todos,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        onTodoClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { todo \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">            // Handle click\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> TodoList\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    todos: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    onTodoClick: (\u003C/span>\u003Cspan style=\"color:#B392F0\">Todo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) -> \u003C/span>\u003Cspan style=\"color:#B392F0\">Unit\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Stateless composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"2-performance-optimization\">2. Performance Optimization\u003C/h2>\n\u003Ch3 id=\"stable-types\">Stable Types\u003C/h3>\n\u003Cp>ƒê√°nh d·∫•u data classes v·ªõi \u003Ccode>@Stable\u003C/code> ho·∫∑c \u003Ccode>@Immutable\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Stable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> id: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> name: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> avatar: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"remember-lambda\">Remember Lambda\u003C/h3>\n\u003Cp>Tr√°nh t·∫°o lambda m·ªõi trong m·ªói recomposition:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user: \u003C/span>\u003Cspan style=\"color:#B392F0\">User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, onClick: () \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Unit) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ‚ùå Bad - t·∫°o lambda m·ªõi m·ªói l·∫ßn\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(onClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">onClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() }) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ‚úÖ Good - pass tr·ª±c ti·∫øp\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Button\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(onClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> onClick) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"lazycolumn-keys\">LazyColumn Keys\u003C/h3>\n\u003Cp>Lu√¥n provide stable keys cho LazyColumn items:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">LazyColumn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    items\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        items \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> users,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        key \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { user \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> user.id } \u003C/span>\u003Cspan style=\"color:#6A737D\">// Stable key\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    ) { user \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserItem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(user)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"3-side-effects\">3. Side Effects\u003C/h2>\n\u003Ch3 id=\"launchedeffect-vs-sideeffect-vs-disposableeffect\">LaunchedEffect vs SideEffect vs DisposableEffect\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> LocationScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService: \u003C/span>\u003Cspan style=\"color:#B392F0\">LocationService\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Run once when key changes\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    LaunchedEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">startTracking\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Run on every recomposition\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    SideEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        analytics.\u003C/span>\u003Cspan style=\"color:#B392F0\">logScreenView\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"location\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // With cleanup\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    DisposableEffect\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(locationService) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> listener \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">addListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        onDispose\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            locationService.\u003C/span>\u003Cspan style=\"color:#B392F0\">removeListener\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(listener)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"4-modifiers-best-practices\">4. Modifiers Best Practices\u003C/h2>\n\u003Ch3 id=\"order-matters\">Order Matters\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> ClickableCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Box\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Modifier\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.dp)      \u003C/span>\u003Cspan style=\"color:#6A737D\">// Padding tr∆∞·ªõc\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">clickable\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { }       \u003C/span>\u003Cspan style=\"color:#6A737D\">// Clickable sau\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            .\u003C/span>\u003Cspan style=\"color:#B392F0\">background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Color.Blue)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"reuse-modifiers\">Reuse Modifiers\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Modifier\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">fillMaxWidth\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">padding\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(horizontal \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.dp)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    Column\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        Text\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Subtitle\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, modifier \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> commonModifier)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"5-preview-best-practices\">5. Preview Best Practices\u003C/h2>\n\u003Ch3 id=\"multiple-previews\">Multiple Previews\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Light Mode\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Dark Mode\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, uiMode \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> UI_MODE_NIGHT_YES)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Preview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Large Font\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, fontScale \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.5f\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> UserCardPreview\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    MyTheme\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            user \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> User\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"John Doe\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                avatar \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"https://example.com/avatar.jpg\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"6-navigation\">6. Navigation\u003C/h2>\n\u003Ch3 id=\"type-safe-navigation\">Type-safe Navigation\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Serializable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">data\u003C/span>\u003Cspan style=\"color:#F97583\"> class\u003C/span>\u003Cspan style=\"color:#B392F0\"> ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> userId: \u003C/span>\u003Cspan style=\"color:#B392F0\">String\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> NavigationGraph\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(navController: \u003C/span>\u003Cspan style=\"color:#B392F0\">NavHostController\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    NavHost\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(navController, startDestination \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"home\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        composable\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"home\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            HomeScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                onProfileClick \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { userId \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    navController.\u003C/span>\u003Cspan style=\"color:#B392F0\">navigate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        composable\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">> { backStackEntry \u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> route \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> backStackEntry.\u003C/span>\u003Cspan style=\"color:#B392F0\">toRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">ProfileRoute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            ProfileScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(userId \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> route.userId)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"7-testing\">7. Testing\u003C/h2>\n\u003Ch3 id=\"ui-testing\">UI Testing\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Test\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> userCard_displaysCorrectInfo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule.\u003C/span>\u003Cspan style=\"color:#B392F0\">setContent\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        UserCard\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(testUser)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">onNodeWithText\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(testUser.name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">assertIsDisplayed\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    composeTestRule\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">onNodeWithContentDescription\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"User avatar\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        .\u003C/span>\u003Cspan style=\"color:#B392F0\">assertExists\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"8-common-pitfalls-to-avoid\">8. Common Pitfalls to Avoid\u003C/h2>\n\u003Ch3 id=\"1-using-mutablestate-directly-in-viewmodel\">1. Using MutableState directly in ViewModel\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ‚ùå Bad\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ‚úÖ Good\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">class\u003C/span>\u003Cspan style=\"color:#B392F0\"> MyViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> : \u003C/span>\u003Cspan style=\"color:#B392F0\">ViewModel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    private\u003C/span>\u003Cspan style=\"color:#F97583\"> val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> MutableStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">UiState\u003C/span>\u003Cspan style=\"color:#E1E4E8\">())\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> state \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> _state.\u003C/span>\u003Cspan style=\"color:#B392F0\">asStateFlow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"2-not-using-derivedstateof\">2. Not using derivedStateOf\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">@Composable\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">fun\u003C/span>\u003Cspan style=\"color:#B392F0\"> SearchScreen\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(items: \u003C/span>\u003Cspan style=\"color:#B392F0\">List\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">Item\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> query \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#B392F0\">mutableStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ‚ùå Bad - recalculates on every recomposition\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> filtered \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> items.\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.name.\u003C/span>\u003Cspan style=\"color:#B392F0\">contains\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // ‚úÖ Good - only recalculates when dependencies change\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> filtered \u003C/span>\u003Cspan style=\"color:#F97583\">by\u003C/span>\u003Cspan style=\"color:#B392F0\"> remember\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(items, query) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        derivedStateOf\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            items.\u003C/span>\u003Cspan style=\"color:#B392F0\">filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { it.name.\u003C/span>\u003Cspan style=\"color:#B392F0\">contains\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(query) }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"k·∫øt-lu·∫≠n\">K·∫øt lu·∫≠n\u003C/h2>\n\u003Cp>Jetpack Compose l√† m·ªôt c√¥ng c·ª• m·∫°nh m·∫Ω, nh∆∞ng ƒë·ªÉ s·ª≠ d·ª•ng hi·ªáu qu·∫£ c·∫ßn hi·ªÉu r√µ c√°c best practices. Hy v·ªçng nh·ªØng tips n√†y gi√∫p b·∫°n vi·∫øt Compose code t·ªët h∆°n!\u003C/p>\n\u003Cp>C√≥ c√¢u h·ªèi? Comment b√™n d∆∞·ªõi ho·∫∑c connect v·ªõi m√¨nh qua \u003Ca href=\"https://linkedin.com/in/khoivan\">LinkedIn\u003C/a>!\u003C/p>",{"headings":136,"localImagePaths":204,"remoteImagePaths":205,"frontmatter":206,"imagePaths":209},[137,138,141,144,147,150,153,156,159,162,165,168,171,174,177,180,183,186,189,192,195,198,201],{"depth":37,"slug":38,"text":39},{"depth":37,"slug":139,"text":140},"1-state-management","1. State Management",{"depth":47,"slug":142,"text":143},"remember-vs-remembersaveable","Remember vs RememberSaveable",{"depth":47,"slug":145,"text":146},"state-hoisting","State Hoisting",{"depth":37,"slug":148,"text":149},"2-performance-optimization","2. Performance Optimization",{"depth":47,"slug":151,"text":152},"stable-types","Stable Types",{"depth":47,"slug":154,"text":155},"remember-lambda","Remember Lambda",{"depth":47,"slug":157,"text":158},"lazycolumn-keys","LazyColumn Keys",{"depth":37,"slug":160,"text":161},"3-side-effects","3. Side Effects",{"depth":47,"slug":163,"text":164},"launchedeffect-vs-sideeffect-vs-disposableeffect","LaunchedEffect vs SideEffect vs DisposableEffect",{"depth":37,"slug":166,"text":167},"4-modifiers-best-practices","4. Modifiers Best Practices",{"depth":47,"slug":169,"text":170},"order-matters","Order Matters",{"depth":47,"slug":172,"text":173},"reuse-modifiers","Reuse Modifiers",{"depth":37,"slug":175,"text":176},"5-preview-best-practices","5. Preview Best Practices",{"depth":47,"slug":178,"text":179},"multiple-previews","Multiple Previews",{"depth":37,"slug":181,"text":182},"6-navigation","6. Navigation",{"depth":47,"slug":184,"text":185},"type-safe-navigation","Type-safe Navigation",{"depth":37,"slug":187,"text":188},"7-testing","7. Testing",{"depth":47,"slug":190,"text":191},"ui-testing","UI Testing",{"depth":37,"slug":193,"text":194},"8-common-pitfalls-to-avoid","8. Common Pitfalls to Avoid",{"depth":47,"slug":196,"text":197},"1-using-mutablestate-directly-in-viewmodel","1. Using MutableState directly in ViewModel",{"depth":47,"slug":199,"text":200},"2-not-using-derivedstateof","2. Not using derivedStateOf",{"depth":37,"slug":202,"text":203},"k·∫øt-lu·∫≠n","K·∫øt lu·∫≠n",[],[],{"title":123,"description":124,"pubDate":207,"author":17,"category":18,"tags":208,"featured":25,"language":27,"readingTime":129},["Date","2024-01-15T00:00:00.000Z"],[24,20,22,127,128],[],"debugging-at-2am",{"id":210,"data":212,"body":222,"filePath":223,"digest":224,"rendered":225},{"title":213,"description":214,"pubDate":215,"author":17,"category":62,"tags":216,"mood":221,"draft":25,"featured":26,"language":27,"readingTime":67,"categorySlug":62},"C√† ph√™ s·ªØa ƒë√°, m√¨ g√≥i, v√† production bug l√∫c 2 gi·ªù s√°ng","C√¢u chuy·ªán v·ªÅ m·ªôt ƒë√™m debug production c·ªßa banking app, v√† nh·ªØng b√†i h·ªçc kh√¥ng c√≥ trong s√°ch v·ªü",["Date","2024-01-31T17:00:00.000Z"],[217,218,62,219,220],"debugging","production","vietnam","banking","personal","## 2:14 AM - ƒêi·ªán tho·∫°i rung\n\nƒêang say gi·∫•c th√¨ ƒëi·ªán tho·∫°i rung li√™n t·ª•c. M·ªü m·∫Øt nh√¨n m√†n h√¨nh: 5 missed calls t·ª´ DevOps team.\n\n\"Production down r·ªìi anh ∆°i. App banking crash khi user login.\"\n\nTh·∫ø l√† leo d·∫≠y, pha ly c√† ph√™ s·ªØa ƒë√° (l√∫c n√†y qu√°n c√† ph√™ n√†o m·ªü ƒë√¢u), b·∫≠t laptop l√™n. Ngo√†i c·ª≠a s·ªï, S√†i G√≤n im l·∫∑ng hi·∫øm hoi. Ch·ªâ c√≥ ti·∫øng xe m√°y th·ªânh tho·∫£ng l∆∞·ªõt qua.\n\n## 2:45 AM - The Hunt Begins\n\n```kotlin\n// Logcat shows this beauty\nFatal Exception: java.lang.NullPointerException\nat com.vietinbank.auth.LoginViewModel.kt:156\n```\n\nLine 156? C√°i line m√† t√¥i commit 3 th√°ng tr∆∞·ªõc, ch·∫°y ngon l√†nh qua 2 m√¥i tr∆∞·ªùng test, 1 m√¥i tr∆∞·ªùng staging, v√† production g·∫ßn 100 ng√†y?\n\nM·ªü Slack, th·∫•y message t·ª´ Product Manager: \"5 tri·ªáu users kh√¥ng login ƒë∆∞·ª£c. Fix ASAP.\"\n\nNo pressure. üòÖ\n\n## 3:30 AM - M√¨ g√≥i v√† Revelation\n\nV·ª´a h√∫p m√¨ t√¥m v·ª´a ƒë·ªçc code. V√† r·ªìi t√¥i th·∫•y n√≥...\n\n```kotlin\n// Someone changed this in another module\ncompanion object {\n    // Moved from const val to lazy initialization \n    val TOKEN_EXPIRY = lazy { \n        RemoteConfig.getLong(\"token_expiry\") \n    }\n}\n```\n\nAi ƒë√≥ ƒë√£ thay ƒë·ªïi c√°ch load config, t·ª´ const sang lazy. V√† RemoteConfig ch∆∞a k·ªãp initialize khi LoginViewModel g·ªçi ƒë·∫øn.\n\n**Race condition.** C√°i th·ª© ch·ªâ xu·∫•t hi·ªán khi c√≥ 5 tri·ªáu users ƒë·ªìng lo·∫°t m·ªü app sau khi Firebase Remote Config update.\n\n## 4:00 AM - The Fix\n\n```kotlin\n// Quick fix for production\nval tokenExpiry = try {\n    TOKEN_EXPIRY.value\n} catch (e: Exception) {\n    DEFAULT_TOKEN_EXPIRY // Fallback value\n}\n```\n\nDeploy hotfix. Test nhanh. Push to production.\n\n## 4:30 AM - S√†i G√≤n th·ª©c d·∫≠y\n\nApp ho·∫°t ƒë·ªông tr·ªü l·∫°i. Slack im l·∫∑ng. Nh√¨n ra c·ª≠a s·ªï, tr·ªùi ƒë√£ h·ª≠ng s√°ng. Xe m√°y b·∫Øt ƒë·∫ßu ƒë√¥ng. Ti·∫øng c√≤i xe, ti·∫øng rao b√°n b√°nh m√¨.\n\nXu·ªëng nh√†, mua ly c√† ph√™ s·ªØa ƒë√° th·∫≠t t·ª´ c√¥ NƒÉm g√≥c ƒë∆∞·ªùng. Ng·ªìi v·ªâa h√®, nh√¨n th√†nh ph·ªë th·ª©c gi·∫•c, nghƒ© v·ªÅ ƒë√™m v·ª´a qua.\n\n## Lessons Learned (kh√¥ng c√≥ trong Clean Architecture)\n\n1. **Production lu√¥n kh√°c local** - D√π test k·ªπ ƒë·∫øn ƒë√¢u, production v·∫´n c√≥ c√°ch surprise b·∫°n.\n\n2. **Race conditions are evil** - Ch√∫ng ·∫©n n√°u, ch·ªù ƒë√∫ng l√∫c ƒë·ªÉ ph√° ho·∫°i. Nh∆∞ con mu·ªói trong ph√≤ng ng·ªß v·∫≠y.\n\n3. **Defensive programming is not paranoid** - Fallback values ƒë√£ c·ª©u r·ªói 5 tri·ªáu users ƒë√™m nay.\n\n4. **C√† ph√™ s·ªØa ƒë√° l√∫c 4:30 AM hits different** - Ng·ªçt ng√†o h∆°n, ƒë·∫≠m ƒë√† h∆°n, c√≥ v·ªã c·ªßa victory.\n\n5. **Banking apps = High stakes** - Khi b·∫°n handle ti·ªÅn c·ªßa ng∆∞·ªùi kh√°c, m·ªói bug l√† m·ªôt responsibility n·∫∑ng n·ªÅ.\n\n## The Morning After\n\n9:00 AM - Team meeting.\n\n\"Good job fixing it quickly!\" - Manager n√≥i.\n\nNh∆∞ng t√¥i bi·∫øt, ƒë√™m nay v·ªÅ nh√† ph·∫£i refactor c√°i module config. Ph·∫£i vi·∫øt th√™m test cho race conditions. Ph·∫£i document l·∫°i cho team.\n\nV√† ph·∫£i mua th√™m m√¨ g√≥i d·ª± tr·ªØ. Just in case. üçú\n\n---\n\n*P/S: ƒê√¢y l√† l√Ω do t·∫°i sao t√¥i lu√¥n c√≥ 1 h·ªôp m√¨ t√¥m, 1 h·ªôp c√† ph√™ s·ªØa ƒë√° h√≤a tan trong drawer. You never know when production decides to throw a party at 2 AM.*\n\n*P/P/S: C·∫£m ∆°n c√¥ NƒÉm ƒë√£ m·ªü qu√°n t·ª´ 4:30 s√°ng. You're the real MVP.*","src/content/blog/debugging-at-2am.md","833cace84ff221d8",{"html":226,"metadata":227},"\u003Ch2 id=\"214-am---ƒëi·ªán-tho·∫°i-rung\">2:14 AM - ƒêi·ªán tho·∫°i rung\u003C/h2>\n\u003Cp>ƒêang say gi·∫•c th√¨ ƒëi·ªán tho·∫°i rung li√™n t·ª•c. M·ªü m·∫Øt nh√¨n m√†n h√¨nh: 5 missed calls t·ª´ DevOps team.\u003C/p>\n\u003Cp>‚ÄúProduction down r·ªìi anh ∆°i. App banking crash khi user login.‚Äù\u003C/p>\n\u003Cp>Th·∫ø l√† leo d·∫≠y, pha ly c√† ph√™ s·ªØa ƒë√° (l√∫c n√†y qu√°n c√† ph√™ n√†o m·ªü ƒë√¢u), b·∫≠t laptop l√™n. Ngo√†i c·ª≠a s·ªï, S√†i G√≤n im l·∫∑ng hi·∫øm hoi. Ch·ªâ c√≥ ti·∫øng xe m√°y th·ªânh tho·∫£ng l∆∞·ªõt qua.\u003C/p>\n\u003Ch2 id=\"245-am---the-hunt-begins\">2:45 AM - The Hunt Begins\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Logcat shows this beauty\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Fatal Exception: \u003C/span>\u003Cspan style=\"color:#B392F0\">java\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.lang.NullPointerException\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">at com.vietinbank.auth.LoginViewModel.kt:\u003C/span>\u003Cspan style=\"color:#B392F0\">156\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Line 156? C√°i line m√† t√¥i commit 3 th√°ng tr∆∞·ªõc, ch·∫°y ngon l√†nh qua 2 m√¥i tr∆∞·ªùng test, 1 m√¥i tr∆∞·ªùng staging, v√† production g·∫ßn 100 ng√†y?\u003C/p>\n\u003Cp>M·ªü Slack, th·∫•y message t·ª´ Product Manager: ‚Äú5 tri·ªáu users kh√¥ng login ƒë∆∞·ª£c. Fix ASAP.‚Äù\u003C/p>\n\u003Cp>No pressure. üòÖ\u003C/p>\n\u003Ch2 id=\"330-am---m√¨-g√≥i-v√†-revelation\">3:30 AM - M√¨ g√≥i v√† Revelation\u003C/h2>\n\u003Cp>V·ª´a h√∫p m√¨ t√¥m v·ª´a ƒë·ªçc code. V√† r·ªìi t√¥i th·∫•y n√≥‚Ä¶\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Someone changed this in another module\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">companion\u003C/span>\u003Cspan style=\"color:#F97583\"> object\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">    // Moved from const val to lazy initialization \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> TOKEN_EXPIRY \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> lazy\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        RemoteConfig.\u003C/span>\u003Cspan style=\"color:#B392F0\">getLong\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"token_expiry\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Ai ƒë√≥ ƒë√£ thay ƒë·ªïi c√°ch load config, t·ª´ const sang lazy. V√† RemoteConfig ch∆∞a k·ªãp initialize khi LoginViewModel g·ªçi ƒë·∫øn.\u003C/p>\n\u003Cp>\u003Cstrong>Race condition.\u003C/strong> C√°i th·ª© ch·ªâ xu·∫•t hi·ªán khi c√≥ 5 tri·ªáu users ƒë·ªìng lo·∫°t m·ªü app sau khi Firebase Remote Config update.\u003C/p>\n\u003Ch2 id=\"400-am---the-fix\">4:00 AM - The Fix\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"kotlin\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Quick fix for production\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">val\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> tokenExpiry \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    TOKEN_EXPIRY.\u003C/span>\u003Cspan style=\"color:#F97583\">value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">} \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (e: \u003C/span>\u003Cspan style=\"color:#B392F0\">Exception\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    DEFAULT_TOKEN_EXPIRY \u003C/span>\u003Cspan style=\"color:#6A737D\">// Fallback value\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Deploy hotfix. Test nhanh. Push to production.\u003C/p>\n\u003Ch2 id=\"430-am---s√†i-g√≤n-th·ª©c-d·∫≠y\">4:30 AM - S√†i G√≤n th·ª©c d·∫≠y\u003C/h2>\n\u003Cp>App ho·∫°t ƒë·ªông tr·ªü l·∫°i. Slack im l·∫∑ng. Nh√¨n ra c·ª≠a s·ªï, tr·ªùi ƒë√£ h·ª≠ng s√°ng. Xe m√°y b·∫Øt ƒë·∫ßu ƒë√¥ng. Ti·∫øng c√≤i xe, ti·∫øng rao b√°n b√°nh m√¨.\u003C/p>\n\u003Cp>Xu·ªëng nh√†, mua ly c√† ph√™ s·ªØa ƒë√° th·∫≠t t·ª´ c√¥ NƒÉm g√≥c ƒë∆∞·ªùng. Ng·ªìi v·ªâa h√®, nh√¨n th√†nh ph·ªë th·ª©c gi·∫•c, nghƒ© v·ªÅ ƒë√™m v·ª´a qua.\u003C/p>\n\u003Ch2 id=\"lessons-learned-kh√¥ng-c√≥-trong-clean-architecture\">Lessons Learned (kh√¥ng c√≥ trong Clean Architecture)\u003C/h2>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Production lu√¥n kh√°c local\u003C/strong> - D√π test k·ªπ ƒë·∫øn ƒë√¢u, production v·∫´n c√≥ c√°ch surprise b·∫°n.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Race conditions are evil\u003C/strong> - Ch√∫ng ·∫©n n√°u, ch·ªù ƒë√∫ng l√∫c ƒë·ªÉ ph√° ho·∫°i. Nh∆∞ con mu·ªói trong ph√≤ng ng·ªß v·∫≠y.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Defensive programming is not paranoid\u003C/strong> - Fallback values ƒë√£ c·ª©u r·ªói 5 tri·ªáu users ƒë√™m nay.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>C√† ph√™ s·ªØa ƒë√° l√∫c 4:30 AM hits different\u003C/strong> - Ng·ªçt ng√†o h∆°n, ƒë·∫≠m ƒë√† h∆°n, c√≥ v·ªã c·ªßa victory.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Banking apps = High stakes\u003C/strong> - Khi b·∫°n handle ti·ªÅn c·ªßa ng∆∞·ªùi kh√°c, m·ªói bug l√† m·ªôt responsibility n·∫∑ng n·ªÅ.\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"the-morning-after\">The Morning After\u003C/h2>\n\u003Cp>9:00 AM - Team meeting.\u003C/p>\n\u003Cp>‚ÄúGood job fixing it quickly!‚Äù - Manager n√≥i.\u003C/p>\n\u003Cp>Nh∆∞ng t√¥i bi·∫øt, ƒë√™m nay v·ªÅ nh√† ph·∫£i refactor c√°i module config. Ph·∫£i vi·∫øt th√™m test cho race conditions. Ph·∫£i document l·∫°i cho team.\u003C/p>\n\u003Cp>V√† ph·∫£i mua th√™m m√¨ g√≥i d·ª± tr·ªØ. Just in case. üçú\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>P/S: ƒê√¢y l√† l√Ω do t·∫°i sao t√¥i lu√¥n c√≥ 1 h·ªôp m√¨ t√¥m, 1 h·ªôp c√† ph√™ s·ªØa ƒë√° h√≤a tan trong drawer. You never know when production decides to throw a party at 2 AM.\u003C/em>\u003C/p>\n\u003Cp>\u003Cem>P/P/S: C·∫£m ∆°n c√¥ NƒÉm ƒë√£ m·ªü qu√°n t·ª´ 4:30 s√°ng. You‚Äôre the real MVP.\u003C/em>\u003C/p>",{"headings":228,"localImagePaths":250,"remoteImagePaths":251,"frontmatter":252,"imagePaths":255},[229,232,235,238,241,244,247],{"depth":37,"slug":230,"text":231},"214-am---ƒëi·ªán-tho·∫°i-rung","2:14 AM - ƒêi·ªán tho·∫°i rung",{"depth":37,"slug":233,"text":234},"245-am---the-hunt-begins","2:45 AM - The Hunt Begins",{"depth":37,"slug":236,"text":237},"330-am---m√¨-g√≥i-v√†-revelation","3:30 AM - M√¨ g√≥i v√† Revelation",{"depth":37,"slug":239,"text":240},"400-am---the-fix","4:00 AM - The Fix",{"depth":37,"slug":242,"text":243},"430-am---s√†i-g√≤n-th·ª©c-d·∫≠y","4:30 AM - S√†i G√≤n th·ª©c d·∫≠y",{"depth":37,"slug":245,"text":246},"lessons-learned-kh√¥ng-c√≥-trong-clean-architecture","Lessons Learned (kh√¥ng c√≥ trong Clean Architecture)",{"depth":37,"slug":248,"text":249},"the-morning-after","The Morning After",[],[],{"title":213,"description":214,"pubDate":253,"author":17,"category":62,"tags":254,"featured":26,"language":27,"mood":221},"Feb 01 2024",[217,218,62,219,220],[],"fix-android-memory-leaks",{"id":256,"data":258,"body":264,"filePath":265,"digest":266,"deferredRender":26},{"title":259,"description":260,"pubDate":261,"author":17,"category":18,"tags":262,"mood":263,"draft":25,"featured":25,"language":27,"readingTime":67,"categorySlug":18},"Fix Memory Leaks in Android: Context v√† Lifecycle","C√°ch detect v√† fix memory leaks ph·ªï bi·∫øn trong Android apps",["Date","2025-01-09T00:00:00.000Z"],[20,128,217],"technical","import Callout from '../../components/mdx/Callout.astro'\nimport Comparison from '../../components/mdx/Comparison.astro'\nimport CodeDemo from '../../components/mdx/CodeDemo.astro'\n\nMemory leaks l√† m·ªôt trong nh·ªØng bugs kh√≥ ch·ªãu nh·∫•t trong Android. App ch·∫°y ngon l√†nh 5 ph√∫t ƒë·∫ßu, sau ƒë√≥ lag v√† crash v·ªõi `OutOfMemoryError`.\n\n\u003CCallout type=\"warning\" title=\"Common Memory Leak\">\n90% memory leaks trong Android ƒë·∫øn t·ª´ vi·ªác gi·ªØ reference ƒë·∫øn Context sai c√°ch.\n\u003C/Callout>\n\n## The Problem\n\n\u003CComparison before=\"Leaking Code\" after=\"Fixed Code\">\n  \u003Cdiv slot=\"before\">\n```kotlin\nclass DataManager {\n    companion object {\n        // ‚ùå Static reference to Context\n        private var context: Context? = null\n        \n        fun init(ctx: Context) {\n            context = ctx\n        }\n    }\n}\n```\n  \u003C/div>\n  \u003Cdiv slot=\"after\">\n```kotlin\nclass DataManager {\n    companion object {\n        // ‚úÖ Use Application Context\n        private var context: Context? = null\n        \n        fun init(ctx: Context) {\n            context = ctx.applicationContext\n        }\n    }\n}\n```\n  \u003C/div>\n\u003C/Comparison>\n\n## Detection v·ªõi LeakCanary\n\n\u003CCodeDemo title=\"Setup LeakCanary\">\n```kotlin\n// build.gradle.kts\ndependencies {\n    debugImplementation(\"com.squareup.leakcanary:leakcanary-android:2.12\")\n}\n\n// Automatic - no code needed!\n// LeakCanary will notify you when leaks happen\n```\n\u003C/CodeDemo>\n\n## Common Patterns to Avoid\n\n### 1. Anonymous Inner Classes\n\n\u003CComparison>\n  \u003Cdiv slot=\"before\">\n```kotlin\nclass MyActivity : Activity() {\n    override fun onCreate(...) {\n        // ‚ùå Anonymous class holds Activity ref\n        Handler().postDelayed({\n            doSomething()\n        }, 10000)\n    }\n}\n```\n  \u003C/div>\n  \u003Cdiv slot=\"after\">\n```kotlin\nclass MyActivity : Activity() {\n    private val handler = Handler(Looper.getMainLooper())\n    \n    override fun onCreate(...) {\n        // ‚úÖ Use lifecycle-aware components\n        lifecycleScope.launch {\n            delay(10000)\n            doSomething()\n        }\n    }\n}\n```\n  \u003C/div>\n\u003C/Comparison>\n\n### 2. Singleton Pattern\n\n\u003CCodeDemo title=\"Safe Singleton\">\n```kotlin\n// Safe singleton with WeakReference\nobject NetworkManager {\n    private var callbackRef: WeakReference\u003CCallback>? = null\n    \n    fun registerCallback(callback: Callback) {\n        callbackRef = WeakReference(callback)\n    }\n    \n    fun notifyCallback() {\n        callbackRef?.get()?.onUpdate()\n    }\n}\n```\n\u003C/CodeDemo>\n\n\u003CCallout type=\"success\">\n**Pro tip**: S·ª≠ d·ª•ng `lifecycleScope` v√† `viewModelScope` thay v√¨ manual threading. Ch√∫ng t·ª± ƒë·ªông cancel khi component destroyed.\n\u003C/Callout>\n\n## Quick Checklist\n\n- [ ] Replace Activity Context v·ªõi Application Context khi possible\n- [ ] Cancel all coroutines trong `onDestroy()`\n- [ ] Unregister all listeners v√† callbacks\n- [ ] Avoid static Views ho·∫∑c Activities\n- [ ] Use WeakReference cho callbacks\n\n\u003CCallout type=\"info\">\n**Tools**: LeakCanary cho detection, Android Studio Profiler cho analysis, v√† MAT (Memory Analyzer Tool) cho deep dive.\n\u003C/Callout>","src/content/blog/fix-android-memory-leaks.mdx","3915b594ef2fe86a","compose-recomposition-optimization",{"id":267,"data":269,"body":274,"filePath":275,"digest":276,"deferredRender":26},{"title":270,"description":271,"pubDate":272,"author":17,"category":18,"tags":273,"mood":263,"draft":25,"featured":25,"language":27,"readingTime":67,"categorySlug":18},"Optimize Jetpack Compose Recomposition","Techniques ƒë·ªÉ gi·∫£m unnecessary recomposition v√† improve UI performance",["Date","2025-01-08T00:00:00.000Z"],[20,24,128],"import Callout from '../../components/mdx/Callout.astro'\nimport Comparison from '../../components/mdx/Comparison.astro'\nimport CodeDemo from '../../components/mdx/CodeDemo.astro'\n\nCompose recomposition nhi·ªÅu qu√° = UI lag. ƒê√¢y l√† c√°ch fix.\n\n## Enable Layout Inspector\n\n\u003CCodeDemo title=\"Debug Recomposition\">\n```kotlin\n// Enable in debug builds\nif (BuildConfig.DEBUG) {\n    System.setProperty(\n        \"kotlinx.coroutines.debug\", \n        \"on\"\n    )\n}\n```\n\u003C/CodeDemo>\n\nAndroid Studio ‚Üí Tools ‚Üí Layout Inspector ‚Üí Show Recomposition Count\n\n\u003CCallout type=\"info\">\nM√†u ƒë·ªè = recompose nhi·ªÅu. M√†u xanh = ·ªïn.\n\u003C/Callout>\n\n## Key Optimization Techniques\n\n### 1. Stable Types\n\n\u003CComparison>\n  \u003Cdiv slot=\"before\">\n```kotlin\n// ‚ùå Unstable - recomposes always\ndata class User(\n    val name: String,\n    val posts: List\u003CPost> // List is unstable\n)\n\n@Composable\nfun UserCard(user: User) {\n    // Recomposes even if user unchanged\n}\n```\n  \u003C/div>\n  \u003Cdiv slot=\"after\">\n```kotlin\n// ‚úÖ Stable with immutable collections\n@Immutable\ndata class User(\n    val name: String,\n    val posts: ImmutableList\u003CPost>\n)\n\n@Composable\nfun UserCard(user: User) {\n    // Skips recomposition if same\n}\n```\n  \u003C/div>\n\u003C/Comparison>\n\n### 2. Remember Calculations\n\n\u003CComparison>\n  \u003Cdiv slot=\"before\">\n```kotlin\n@Composable\nfun ExpensiveList(items: List\u003CItem>) {\n    // ‚ùå Filters on every recomposition\n    val filtered = items.filter { \n        it.price > 100 \n    }\n    LazyColumn {\n        items(filtered) { item ->\n            ItemCard(item)\n        }\n    }\n}\n```\n  \u003C/div>\n  \u003Cdiv slot=\"after\">\n```kotlin\n@Composable\nfun ExpensiveList(items: List\u003CItem>) {\n    // ‚úÖ Remembers filtered list\n    val filtered = remember(items) {\n        items.filter { it.price > 100 }\n    }\n    LazyColumn {\n        items(filtered, key = { it.id }) {\n            ItemCard(it)\n        }\n    }\n}\n```\n  \u003C/div>\n\u003C/Comparison>\n\n### 3. Lambda Optimization\n\n\u003CCodeDemo title=\"Avoid Lambda Allocation\">\n```kotlin\n@Composable\nfun MyScreen(viewModel: MyViewModel) {\n    val onClick = remember(viewModel) {\n        { item: Item -> viewModel.onItemClick(item) }\n    }\n    \n    ItemList(\n        items = viewModel.items,\n        onClick = onClick // Stable reference\n    )\n}\n```\n\u003C/CodeDemo>\n\n\u003CCallout type=\"warning\" title=\"Common Mistake\">\nPassing `{ viewModel.doSomething() }` directly creates new lambda every recomposition!\n\u003C/Callout>\n\n## Advanced: derivedStateOf\n\n\u003CCodeDemo title=\"Derive State Efficiently\">\n```kotlin\n@Composable\nfun SearchScreen() {\n    var query by remember { mutableStateOf(\"\") }\n    val items = remember { getAllItems() }\n    \n    // Only recomputes when query changes\n    val filtered by remember {\n        derivedStateOf {\n            if (query.isEmpty()) items\n            else items.filter { \n                it.name.contains(query, ignoreCase = true) \n            }\n        }\n    }\n    \n    SearchResults(filtered)\n}\n```\n\u003C/CodeDemo>\n\n## Performance Metrics\n\n\u003CCallout type=\"success\">\nSau khi optimize: 60% √≠t recomposition, UI smooth t·ª´ 45fps ‚Üí 60fps tr√™n mid-range devices.\n\u003C/Callout>\n\n## Quick Wins\n\n1. **@Stable** ho·∫∑c **@Immutable** cho data classes\n2. **remember { }** cho expensive operations\n3. **key** parameter trong LazyColumn items\n4. **derivedStateOf** cho computed values\n5. **R8** full mode ƒë·ªÉ optimize further\n\n\u003CCodeDemo title=\"Enable R8 Full Mode\">\n```properties\n# gradle.properties\nandroid.enableR8.fullMode=true\n```\n\u003C/CodeDemo>","src/content/blog/compose-recomposition-optimization.mdx","8fb994e676205de4","android-ci-cd-github-actions",{"id":277,"data":279,"body":286,"filePath":287,"digest":288,"deferredRender":26},{"title":280,"description":281,"pubDate":282,"author":17,"category":18,"tags":283,"mood":263,"draft":25,"featured":25,"language":27,"readingTime":67,"categorySlug":18},"Android CI/CD v·ªõi GitHub Actions trong 15 ph√∫t","Setup automated testing v√† deployment cho Android app",["Date","2025-01-07T00:00:00.000Z"],[20,284,285],"ci-cd","github-actions","import Callout from '../../components/mdx/Callout.astro'\nimport CodeDemo from '../../components/mdx/CodeDemo.astro'\n\nTired c·ªßa vi·ªác manual build v√† test? Setup CI/CD m·ªôt l·∫ßn, relax forever.\n\n## Basic Workflow\n\n\u003CCodeDemo title=\".github/workflows/android.yml\">\n```yaml\nname: Android CI\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup JDK 17\n      uses: actions/setup-java@v3\n      with:\n        java-version: '17'\n        distribution: 'temurin'\n    \n    - name: Cache Gradle\n      uses: actions/cache@v3\n      with:\n        path: |\n          ~/.gradle/caches\n          ~/.gradle/wrapper\n        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n    \n    - name: Run Tests\n      run: ./gradlew test\n    \n    - name: Upload Test Reports\n      if: failure()\n      uses: actions/upload-artifact@v3\n      with:\n        name: test-reports\n        path: app/build/reports/tests\n```\n\u003C/CodeDemo>\n\n\u003CCallout type=\"info\">\nCache Gradle dependencies gi·∫£m build time t·ª´ 8 ph√∫t xu·ªëng 3 ph√∫t.\n\u003C/Callout>\n\n## Build & Sign APK\n\n\u003CCodeDemo title=\"Secure Signing\">\n```yaml\n- name: Decode Keystore\n  env:\n    KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}\n  run: |\n    echo $KEYSTORE | base64 --decode > app/keystore.jks\n\n- name: Build Release APK\n  env:\n    KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}\n    KEY_ALIAS: ${{ secrets.KEY_ALIAS }}\n    KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}\n  run: |\n    ./gradlew assembleRelease \\\n      -Pandroid.injected.signing.store.file=keystore.jks \\\n      -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \\\n      -Pandroid.injected.signing.key.alias=$KEY_ALIAS \\\n      -Pandroid.injected.signing.key.password=$KEY_PASSWORD\n```\n\u003C/CodeDemo>\n\n\u003CCallout type=\"warning\" title=\"Security\">\nStore keystore as base64 trong GitHub Secrets. NEVER commit keystore file!\n\u003C/Callout>\n\n## Deploy to Play Store\n\n\u003CCodeDemo title=\"Auto Deploy\">\n```yaml\n- name: Deploy to Play Store\n  uses: r0adkll/upload-google-play@v1\n  with:\n    serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT }}\n    packageName: com.yourapp.package\n    releaseFiles: app/build/outputs/bundle/release/app-release.aab\n    track: internal\n    status: draft\n```\n\u003C/CodeDemo>\n\n## Slack Notifications\n\n\u003CCodeDemo title=\"Notify Team\">\n```yaml\n- name: Notify Slack\n  if: always()\n  uses: 8398a7/action-slack@v3\n  with:\n    status: ${{ job.status }}\n    text: |\n      Build ${{ job.status }}\n      Branch: ${{ github.ref }}\n      Commit: ${{ github.sha }}\n    webhook_url: ${{ secrets.SLACK_WEBHOOK }}\n```\n\u003C/CodeDemo>\n\n## Matrix Testing\n\n\u003CCodeDemo title=\"Test Multiple Versions\">\n```yaml\nstrategy:\n  matrix:\n    api-level: [29, 31, 33]\n    \n- name: Run Instrumented Tests\n  uses: reactivecircus/android-emulator-runner@v2\n  with:\n    api-level: ${{ matrix.api-level }}\n    script: ./gradlew connectedCheck\n```\n\u003C/CodeDemo>\n\n\u003CCallout type=\"success\">\nResult: Auto test tr√™n 3 API levels, build signed APK, deploy to Play Store Internal Testing. Total time: 12 minutes.\n\u003C/Callout>\n\n## Cost Optimization\n\n- **Free tier**: 2,000 ph√∫t/th√°ng cho private repos\n- **Self-hosted runners**: D√πng Mac Mini c≈© cho iOS builds\n- **Skip unnecessary builds**: Use `[skip ci]` trong commit message\n\n\u003CCodeDemo title=\"Conditional Build\">\n```yaml\nif: \"!contains(github.event.head_commit.message, '[skip ci]')\"\n```\n\u003C/CodeDemo>","src/content/blog/android-ci-cd-github-actions.mdx","32cbe1a1ed56db60"]